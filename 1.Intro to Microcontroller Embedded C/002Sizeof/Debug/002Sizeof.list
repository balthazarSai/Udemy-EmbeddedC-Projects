
002Sizeof.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001298  080001d0  080001d0  000101d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000015c  08001468  08001468  00011468  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080015c4  080015c4  00020064  2**0
                  CONTENTS
  4 .ARM          00000000  080015c4  080015c4  00020064  2**0
                  CONTENTS
  5 .preinit_array 00000000  080015c4  080015c4  00020064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080015c4  080015c4  000115c4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080015c8  080015c8  000115c8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000064  20000000  080015cc  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000030  20000064  08001630  00020064  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000094  08001630  00020094  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000958  00000000  00000000  0002008e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000002f8  00000000  00000000  000209e6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000118  00000000  00000000  00020ce0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000000e0  00000000  00000000  00020df8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00002a87  00000000  00000000  00020ed8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000012d2  00000000  00000000  0002395f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00009315  00000000  00000000  00024c31  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  0002df46  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000b5c  00000000  00000000  0002df98  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	; (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	; (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	; (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	20000064 	.word	0x20000064
 80001ec:	00000000 	.word	0x00000000
 80001f0:	08001450 	.word	0x08001450

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	; (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	; (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	; (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	20000068 	.word	0x20000068
 800020c:	08001450 	.word	0x08001450

08000210 <memchr>:
 8000210:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000214:	2a10      	cmp	r2, #16
 8000216:	db2b      	blt.n	8000270 <memchr+0x60>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	d008      	beq.n	8000230 <memchr+0x20>
 800021e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000222:	3a01      	subs	r2, #1
 8000224:	428b      	cmp	r3, r1
 8000226:	d02d      	beq.n	8000284 <memchr+0x74>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	b342      	cbz	r2, 8000280 <memchr+0x70>
 800022e:	d1f6      	bne.n	800021e <memchr+0xe>
 8000230:	b4f0      	push	{r4, r5, r6, r7}
 8000232:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000236:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800023a:	f022 0407 	bic.w	r4, r2, #7
 800023e:	f07f 0700 	mvns.w	r7, #0
 8000242:	2300      	movs	r3, #0
 8000244:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000248:	3c08      	subs	r4, #8
 800024a:	ea85 0501 	eor.w	r5, r5, r1
 800024e:	ea86 0601 	eor.w	r6, r6, r1
 8000252:	fa85 f547 	uadd8	r5, r5, r7
 8000256:	faa3 f587 	sel	r5, r3, r7
 800025a:	fa86 f647 	uadd8	r6, r6, r7
 800025e:	faa5 f687 	sel	r6, r5, r7
 8000262:	b98e      	cbnz	r6, 8000288 <memchr+0x78>
 8000264:	d1ee      	bne.n	8000244 <memchr+0x34>
 8000266:	bcf0      	pop	{r4, r5, r6, r7}
 8000268:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800026c:	f002 0207 	and.w	r2, r2, #7
 8000270:	b132      	cbz	r2, 8000280 <memchr+0x70>
 8000272:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000276:	3a01      	subs	r2, #1
 8000278:	ea83 0301 	eor.w	r3, r3, r1
 800027c:	b113      	cbz	r3, 8000284 <memchr+0x74>
 800027e:	d1f8      	bne.n	8000272 <memchr+0x62>
 8000280:	2000      	movs	r0, #0
 8000282:	4770      	bx	lr
 8000284:	3801      	subs	r0, #1
 8000286:	4770      	bx	lr
 8000288:	2d00      	cmp	r5, #0
 800028a:	bf06      	itte	eq
 800028c:	4635      	moveq	r5, r6
 800028e:	3803      	subeq	r0, #3
 8000290:	3807      	subne	r0, #7
 8000292:	f015 0f01 	tst.w	r5, #1
 8000296:	d107      	bne.n	80002a8 <memchr+0x98>
 8000298:	3001      	adds	r0, #1
 800029a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800029e:	bf02      	ittt	eq
 80002a0:	3001      	addeq	r0, #1
 80002a2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 80002a6:	3001      	addeq	r0, #1
 80002a8:	bcf0      	pop	{r4, r5, r6, r7}
 80002aa:	3801      	subs	r0, #1
 80002ac:	4770      	bx	lr
 80002ae:	bf00      	nop

080002b0 <main>:
#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

int main(void)
{
 80002b0:	b580      	push	{r7, lr}
 80002b2:	af00      	add	r7, sp, #0
    /* Loop forever */
	printf("Size of char data type is %u\n",sizeof(char));
 80002b4:	2101      	movs	r1, #1
 80002b6:	480c      	ldr	r0, [pc, #48]	; (80002e8 <main+0x38>)
 80002b8:	f000 f944 	bl	8000544 <iprintf>
	printf("Size of short data type is %u\n",sizeof(short));
 80002bc:	2102      	movs	r1, #2
 80002be:	480b      	ldr	r0, [pc, #44]	; (80002ec <main+0x3c>)
 80002c0:	f000 f940 	bl	8000544 <iprintf>
	printf("Size of int data type is %u\n",sizeof(int));
 80002c4:	2104      	movs	r1, #4
 80002c6:	480a      	ldr	r0, [pc, #40]	; (80002f0 <main+0x40>)
 80002c8:	f000 f93c 	bl	8000544 <iprintf>
	printf("Size of long data type is %u\n",sizeof(long));
 80002cc:	2104      	movs	r1, #4
 80002ce:	4809      	ldr	r0, [pc, #36]	; (80002f4 <main+0x44>)
 80002d0:	f000 f938 	bl	8000544 <iprintf>
	printf("Size of long long data type is %u\n",sizeof(long long));
 80002d4:	2108      	movs	r1, #8
 80002d6:	4808      	ldr	r0, [pc, #32]	; (80002f8 <main+0x48>)
 80002d8:	f000 f934 	bl	8000544 <iprintf>
	printf("Size of doublt data type is %u\n",sizeof(double));
 80002dc:	2108      	movs	r1, #8
 80002de:	4807      	ldr	r0, [pc, #28]	; (80002fc <main+0x4c>)
 80002e0:	f000 f930 	bl	8000544 <iprintf>
	for(;;);
 80002e4:	e7fe      	b.n	80002e4 <main+0x34>
 80002e6:	bf00      	nop
 80002e8:	08001468 	.word	0x08001468
 80002ec:	08001488 	.word	0x08001488
 80002f0:	080014a8 	.word	0x080014a8
 80002f4:	080014c8 	.word	0x080014c8
 80002f8:	080014e8 	.word	0x080014e8
 80002fc:	0800150c 	.word	0x0800150c

08000300 <ITM_SendChar>:
/* ITM register addresses */
#define ITM_STIMULUS_PORT0   	*((volatile uint32_t*) 0xE0000000 )
#define ITM_TRACE_EN          	*((volatile uint32_t*) 0xE0000E00 )

void ITM_SendChar(uint8_t ch)
{
 8000300:	b480      	push	{r7}
 8000302:	b083      	sub	sp, #12
 8000304:	af00      	add	r7, sp, #0
 8000306:	4603      	mov	r3, r0
 8000308:	71fb      	strb	r3, [r7, #7]

	//Enable TRCENA
	DEMCR |= ( 1 << 24);
 800030a:	4b0e      	ldr	r3, [pc, #56]	; (8000344 <ITM_SendChar+0x44>)
 800030c:	681b      	ldr	r3, [r3, #0]
 800030e:	4a0d      	ldr	r2, [pc, #52]	; (8000344 <ITM_SendChar+0x44>)
 8000310:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8000314:	6013      	str	r3, [r2, #0]

	//enable stimulus port 0
	ITM_TRACE_EN |= ( 1 << 0);
 8000316:	4b0c      	ldr	r3, [pc, #48]	; (8000348 <ITM_SendChar+0x48>)
 8000318:	681b      	ldr	r3, [r3, #0]
 800031a:	4a0b      	ldr	r2, [pc, #44]	; (8000348 <ITM_SendChar+0x48>)
 800031c:	f043 0301 	orr.w	r3, r3, #1
 8000320:	6013      	str	r3, [r2, #0]

	// read FIFO status in bit [0]:
	while(!(ITM_STIMULUS_PORT0 & 1));
 8000322:	bf00      	nop
 8000324:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 8000328:	681b      	ldr	r3, [r3, #0]
 800032a:	f003 0301 	and.w	r3, r3, #1
 800032e:	2b00      	cmp	r3, #0
 8000330:	d0f8      	beq.n	8000324 <ITM_SendChar+0x24>

	//Write to ITM stimulus port0
	ITM_STIMULUS_PORT0 = ch;
 8000332:	f04f 4260 	mov.w	r2, #3758096384	; 0xe0000000
 8000336:	79fb      	ldrb	r3, [r7, #7]
 8000338:	6013      	str	r3, [r2, #0]
}
 800033a:	bf00      	nop
 800033c:	370c      	adds	r7, #12
 800033e:	46bd      	mov	sp, r7
 8000340:	bc80      	pop	{r7}
 8000342:	4770      	bx	lr
 8000344:	e000edfc 	.word	0xe000edfc
 8000348:	e0000e00 	.word	0xe0000e00

0800034c <_read>:
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 800034c:	b580      	push	{r7, lr}
 800034e:	b086      	sub	sp, #24
 8000350:	af00      	add	r7, sp, #0
 8000352:	60f8      	str	r0, [r7, #12]
 8000354:	60b9      	str	r1, [r7, #8]
 8000356:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000358:	2300      	movs	r3, #0
 800035a:	617b      	str	r3, [r7, #20]
 800035c:	e00a      	b.n	8000374 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 800035e:	f3af 8000 	nop.w
 8000362:	4601      	mov	r1, r0
 8000364:	68bb      	ldr	r3, [r7, #8]
 8000366:	1c5a      	adds	r2, r3, #1
 8000368:	60ba      	str	r2, [r7, #8]
 800036a:	b2ca      	uxtb	r2, r1
 800036c:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800036e:	697b      	ldr	r3, [r7, #20]
 8000370:	3301      	adds	r3, #1
 8000372:	617b      	str	r3, [r7, #20]
 8000374:	697a      	ldr	r2, [r7, #20]
 8000376:	687b      	ldr	r3, [r7, #4]
 8000378:	429a      	cmp	r2, r3
 800037a:	dbf0      	blt.n	800035e <_read+0x12>
	}

return len;
 800037c:	687b      	ldr	r3, [r7, #4]
}
 800037e:	4618      	mov	r0, r3
 8000380:	3718      	adds	r7, #24
 8000382:	46bd      	mov	sp, r7
 8000384:	bd80      	pop	{r7, pc}

08000386 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8000386:	b580      	push	{r7, lr}
 8000388:	b086      	sub	sp, #24
 800038a:	af00      	add	r7, sp, #0
 800038c:	60f8      	str	r0, [r7, #12]
 800038e:	60b9      	str	r1, [r7, #8]
 8000390:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000392:	2300      	movs	r3, #0
 8000394:	617b      	str	r3, [r7, #20]
 8000396:	e009      	b.n	80003ac <_write+0x26>
	{
		//__io_putchar(*ptr++);
		ITM_SendChar(*ptr++);
 8000398:	68bb      	ldr	r3, [r7, #8]
 800039a:	1c5a      	adds	r2, r3, #1
 800039c:	60ba      	str	r2, [r7, #8]
 800039e:	781b      	ldrb	r3, [r3, #0]
 80003a0:	4618      	mov	r0, r3
 80003a2:	f7ff ffad 	bl	8000300 <ITM_SendChar>
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003a6:	697b      	ldr	r3, [r7, #20]
 80003a8:	3301      	adds	r3, #1
 80003aa:	617b      	str	r3, [r7, #20]
 80003ac:	697a      	ldr	r2, [r7, #20]
 80003ae:	687b      	ldr	r3, [r7, #4]
 80003b0:	429a      	cmp	r2, r3
 80003b2:	dbf1      	blt.n	8000398 <_write+0x12>
	}
	return len;
 80003b4:	687b      	ldr	r3, [r7, #4]
}
 80003b6:	4618      	mov	r0, r3
 80003b8:	3718      	adds	r7, #24
 80003ba:	46bd      	mov	sp, r7
 80003bc:	bd80      	pop	{r7, pc}

080003be <_close>:

int _close(int file)
{
 80003be:	b480      	push	{r7}
 80003c0:	b083      	sub	sp, #12
 80003c2:	af00      	add	r7, sp, #0
 80003c4:	6078      	str	r0, [r7, #4]
	return -1;
 80003c6:	f04f 33ff 	mov.w	r3, #4294967295
}
 80003ca:	4618      	mov	r0, r3
 80003cc:	370c      	adds	r7, #12
 80003ce:	46bd      	mov	sp, r7
 80003d0:	bc80      	pop	{r7}
 80003d2:	4770      	bx	lr

080003d4 <_fstat>:


int _fstat(int file, struct stat *st)
{
 80003d4:	b480      	push	{r7}
 80003d6:	b083      	sub	sp, #12
 80003d8:	af00      	add	r7, sp, #0
 80003da:	6078      	str	r0, [r7, #4]
 80003dc:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 80003de:	683b      	ldr	r3, [r7, #0]
 80003e0:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80003e4:	605a      	str	r2, [r3, #4]
	return 0;
 80003e6:	2300      	movs	r3, #0
}
 80003e8:	4618      	mov	r0, r3
 80003ea:	370c      	adds	r7, #12
 80003ec:	46bd      	mov	sp, r7
 80003ee:	bc80      	pop	{r7}
 80003f0:	4770      	bx	lr

080003f2 <_isatty>:

int _isatty(int file)
{
 80003f2:	b480      	push	{r7}
 80003f4:	b083      	sub	sp, #12
 80003f6:	af00      	add	r7, sp, #0
 80003f8:	6078      	str	r0, [r7, #4]
	return 1;
 80003fa:	2301      	movs	r3, #1
}
 80003fc:	4618      	mov	r0, r3
 80003fe:	370c      	adds	r7, #12
 8000400:	46bd      	mov	sp, r7
 8000402:	bc80      	pop	{r7}
 8000404:	4770      	bx	lr

08000406 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8000406:	b480      	push	{r7}
 8000408:	b085      	sub	sp, #20
 800040a:	af00      	add	r7, sp, #0
 800040c:	60f8      	str	r0, [r7, #12]
 800040e:	60b9      	str	r1, [r7, #8]
 8000410:	607a      	str	r2, [r7, #4]
	return 0;
 8000412:	2300      	movs	r3, #0
}
 8000414:	4618      	mov	r0, r3
 8000416:	3714      	adds	r7, #20
 8000418:	46bd      	mov	sp, r7
 800041a:	bc80      	pop	{r7}
 800041c:	4770      	bx	lr
	...

08000420 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000420:	b580      	push	{r7, lr}
 8000422:	b086      	sub	sp, #24
 8000424:	af00      	add	r7, sp, #0
 8000426:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8000428:	4a14      	ldr	r2, [pc, #80]	; (800047c <_sbrk+0x5c>)
 800042a:	4b15      	ldr	r3, [pc, #84]	; (8000480 <_sbrk+0x60>)
 800042c:	1ad3      	subs	r3, r2, r3
 800042e:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000430:	697b      	ldr	r3, [r7, #20]
 8000432:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000434:	4b13      	ldr	r3, [pc, #76]	; (8000484 <_sbrk+0x64>)
 8000436:	681b      	ldr	r3, [r3, #0]
 8000438:	2b00      	cmp	r3, #0
 800043a:	d102      	bne.n	8000442 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 800043c:	4b11      	ldr	r3, [pc, #68]	; (8000484 <_sbrk+0x64>)
 800043e:	4a12      	ldr	r2, [pc, #72]	; (8000488 <_sbrk+0x68>)
 8000440:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8000442:	4b10      	ldr	r3, [pc, #64]	; (8000484 <_sbrk+0x64>)
 8000444:	681a      	ldr	r2, [r3, #0]
 8000446:	687b      	ldr	r3, [r7, #4]
 8000448:	4413      	add	r3, r2
 800044a:	693a      	ldr	r2, [r7, #16]
 800044c:	429a      	cmp	r2, r3
 800044e:	d207      	bcs.n	8000460 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000450:	f000 f846 	bl	80004e0 <__errno>
 8000454:	4603      	mov	r3, r0
 8000456:	220c      	movs	r2, #12
 8000458:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800045a:	f04f 33ff 	mov.w	r3, #4294967295
 800045e:	e009      	b.n	8000474 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000460:	4b08      	ldr	r3, [pc, #32]	; (8000484 <_sbrk+0x64>)
 8000462:	681b      	ldr	r3, [r3, #0]
 8000464:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8000466:	4b07      	ldr	r3, [pc, #28]	; (8000484 <_sbrk+0x64>)
 8000468:	681a      	ldr	r2, [r3, #0]
 800046a:	687b      	ldr	r3, [r7, #4]
 800046c:	4413      	add	r3, r2
 800046e:	4a05      	ldr	r2, [pc, #20]	; (8000484 <_sbrk+0x64>)
 8000470:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8000472:	68fb      	ldr	r3, [r7, #12]
}
 8000474:	4618      	mov	r0, r3
 8000476:	3718      	adds	r7, #24
 8000478:	46bd      	mov	sp, r7
 800047a:	bd80      	pop	{r7, pc}
 800047c:	20020000 	.word	0x20020000
 8000480:	00000400 	.word	0x00000400
 8000484:	20000080 	.word	0x20000080
 8000488:	20000098 	.word	0x20000098

0800048c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800048c:	480d      	ldr	r0, [pc, #52]	; (80004c4 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800048e:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000490:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000494:	480c      	ldr	r0, [pc, #48]	; (80004c8 <LoopForever+0x6>)
  ldr r1, =_edata
 8000496:	490d      	ldr	r1, [pc, #52]	; (80004cc <LoopForever+0xa>)
  ldr r2, =_sidata
 8000498:	4a0d      	ldr	r2, [pc, #52]	; (80004d0 <LoopForever+0xe>)
  movs r3, #0
 800049a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800049c:	e002      	b.n	80004a4 <LoopCopyDataInit>

0800049e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800049e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80004a0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80004a2:	3304      	adds	r3, #4

080004a4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80004a4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80004a6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80004a8:	d3f9      	bcc.n	800049e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80004aa:	4a0a      	ldr	r2, [pc, #40]	; (80004d4 <LoopForever+0x12>)
  ldr r4, =_ebss
 80004ac:	4c0a      	ldr	r4, [pc, #40]	; (80004d8 <LoopForever+0x16>)
  movs r3, #0
 80004ae:	2300      	movs	r3, #0
  b LoopFillZerobss
 80004b0:	e001      	b.n	80004b6 <LoopFillZerobss>

080004b2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80004b2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80004b4:	3204      	adds	r2, #4

080004b6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80004b6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80004b8:	d3fb      	bcc.n	80004b2 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80004ba:	f000 f817 	bl	80004ec <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80004be:	f7ff fef7 	bl	80002b0 <main>

080004c2 <LoopForever>:

LoopForever:
    b LoopForever
 80004c2:	e7fe      	b.n	80004c2 <LoopForever>
  ldr   r0, =_estack
 80004c4:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80004c8:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80004cc:	20000064 	.word	0x20000064
  ldr r2, =_sidata
 80004d0:	080015cc 	.word	0x080015cc
  ldr r2, =_sbss
 80004d4:	20000064 	.word	0x20000064
  ldr r4, =_ebss
 80004d8:	20000094 	.word	0x20000094

080004dc <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80004dc:	e7fe      	b.n	80004dc <ADC_IRQHandler>
	...

080004e0 <__errno>:
 80004e0:	4b01      	ldr	r3, [pc, #4]	; (80004e8 <__errno+0x8>)
 80004e2:	6818      	ldr	r0, [r3, #0]
 80004e4:	4770      	bx	lr
 80004e6:	bf00      	nop
 80004e8:	20000000 	.word	0x20000000

080004ec <__libc_init_array>:
 80004ec:	b570      	push	{r4, r5, r6, lr}
 80004ee:	4d0d      	ldr	r5, [pc, #52]	; (8000524 <__libc_init_array+0x38>)
 80004f0:	4c0d      	ldr	r4, [pc, #52]	; (8000528 <__libc_init_array+0x3c>)
 80004f2:	1b64      	subs	r4, r4, r5
 80004f4:	10a4      	asrs	r4, r4, #2
 80004f6:	2600      	movs	r6, #0
 80004f8:	42a6      	cmp	r6, r4
 80004fa:	d109      	bne.n	8000510 <__libc_init_array+0x24>
 80004fc:	4d0b      	ldr	r5, [pc, #44]	; (800052c <__libc_init_array+0x40>)
 80004fe:	4c0c      	ldr	r4, [pc, #48]	; (8000530 <__libc_init_array+0x44>)
 8000500:	f000 ffa6 	bl	8001450 <_init>
 8000504:	1b64      	subs	r4, r4, r5
 8000506:	10a4      	asrs	r4, r4, #2
 8000508:	2600      	movs	r6, #0
 800050a:	42a6      	cmp	r6, r4
 800050c:	d105      	bne.n	800051a <__libc_init_array+0x2e>
 800050e:	bd70      	pop	{r4, r5, r6, pc}
 8000510:	f855 3b04 	ldr.w	r3, [r5], #4
 8000514:	4798      	blx	r3
 8000516:	3601      	adds	r6, #1
 8000518:	e7ee      	b.n	80004f8 <__libc_init_array+0xc>
 800051a:	f855 3b04 	ldr.w	r3, [r5], #4
 800051e:	4798      	blx	r3
 8000520:	3601      	adds	r6, #1
 8000522:	e7f2      	b.n	800050a <__libc_init_array+0x1e>
 8000524:	080015c4 	.word	0x080015c4
 8000528:	080015c4 	.word	0x080015c4
 800052c:	080015c4 	.word	0x080015c4
 8000530:	080015c8 	.word	0x080015c8

08000534 <memset>:
 8000534:	4402      	add	r2, r0
 8000536:	4603      	mov	r3, r0
 8000538:	4293      	cmp	r3, r2
 800053a:	d100      	bne.n	800053e <memset+0xa>
 800053c:	4770      	bx	lr
 800053e:	f803 1b01 	strb.w	r1, [r3], #1
 8000542:	e7f9      	b.n	8000538 <memset+0x4>

08000544 <iprintf>:
 8000544:	b40f      	push	{r0, r1, r2, r3}
 8000546:	4b0a      	ldr	r3, [pc, #40]	; (8000570 <iprintf+0x2c>)
 8000548:	b513      	push	{r0, r1, r4, lr}
 800054a:	681c      	ldr	r4, [r3, #0]
 800054c:	b124      	cbz	r4, 8000558 <iprintf+0x14>
 800054e:	69a3      	ldr	r3, [r4, #24]
 8000550:	b913      	cbnz	r3, 8000558 <iprintf+0x14>
 8000552:	4620      	mov	r0, r4
 8000554:	f000 f866 	bl	8000624 <__sinit>
 8000558:	ab05      	add	r3, sp, #20
 800055a:	9a04      	ldr	r2, [sp, #16]
 800055c:	68a1      	ldr	r1, [r4, #8]
 800055e:	9301      	str	r3, [sp, #4]
 8000560:	4620      	mov	r0, r4
 8000562:	f000 f9bb 	bl	80008dc <_vfiprintf_r>
 8000566:	b002      	add	sp, #8
 8000568:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800056c:	b004      	add	sp, #16
 800056e:	4770      	bx	lr
 8000570:	20000000 	.word	0x20000000

08000574 <std>:
 8000574:	2300      	movs	r3, #0
 8000576:	b510      	push	{r4, lr}
 8000578:	4604      	mov	r4, r0
 800057a:	e9c0 3300 	strd	r3, r3, [r0]
 800057e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000582:	6083      	str	r3, [r0, #8]
 8000584:	8181      	strh	r1, [r0, #12]
 8000586:	6643      	str	r3, [r0, #100]	; 0x64
 8000588:	81c2      	strh	r2, [r0, #14]
 800058a:	6183      	str	r3, [r0, #24]
 800058c:	4619      	mov	r1, r3
 800058e:	2208      	movs	r2, #8
 8000590:	305c      	adds	r0, #92	; 0x5c
 8000592:	f7ff ffcf 	bl	8000534 <memset>
 8000596:	4b05      	ldr	r3, [pc, #20]	; (80005ac <std+0x38>)
 8000598:	6263      	str	r3, [r4, #36]	; 0x24
 800059a:	4b05      	ldr	r3, [pc, #20]	; (80005b0 <std+0x3c>)
 800059c:	62a3      	str	r3, [r4, #40]	; 0x28
 800059e:	4b05      	ldr	r3, [pc, #20]	; (80005b4 <std+0x40>)
 80005a0:	62e3      	str	r3, [r4, #44]	; 0x2c
 80005a2:	4b05      	ldr	r3, [pc, #20]	; (80005b8 <std+0x44>)
 80005a4:	6224      	str	r4, [r4, #32]
 80005a6:	6323      	str	r3, [r4, #48]	; 0x30
 80005a8:	bd10      	pop	{r4, pc}
 80005aa:	bf00      	nop
 80005ac:	08000e85 	.word	0x08000e85
 80005b0:	08000ea7 	.word	0x08000ea7
 80005b4:	08000edf 	.word	0x08000edf
 80005b8:	08000f03 	.word	0x08000f03

080005bc <_cleanup_r>:
 80005bc:	4901      	ldr	r1, [pc, #4]	; (80005c4 <_cleanup_r+0x8>)
 80005be:	f000 b8af 	b.w	8000720 <_fwalk_reent>
 80005c2:	bf00      	nop
 80005c4:	080011d5 	.word	0x080011d5

080005c8 <__sfmoreglue>:
 80005c8:	b570      	push	{r4, r5, r6, lr}
 80005ca:	2268      	movs	r2, #104	; 0x68
 80005cc:	1e4d      	subs	r5, r1, #1
 80005ce:	4355      	muls	r5, r2
 80005d0:	460e      	mov	r6, r1
 80005d2:	f105 0174 	add.w	r1, r5, #116	; 0x74
 80005d6:	f000 f8e5 	bl	80007a4 <_malloc_r>
 80005da:	4604      	mov	r4, r0
 80005dc:	b140      	cbz	r0, 80005f0 <__sfmoreglue+0x28>
 80005de:	2100      	movs	r1, #0
 80005e0:	e9c0 1600 	strd	r1, r6, [r0]
 80005e4:	300c      	adds	r0, #12
 80005e6:	60a0      	str	r0, [r4, #8]
 80005e8:	f105 0268 	add.w	r2, r5, #104	; 0x68
 80005ec:	f7ff ffa2 	bl	8000534 <memset>
 80005f0:	4620      	mov	r0, r4
 80005f2:	bd70      	pop	{r4, r5, r6, pc}

080005f4 <__sfp_lock_acquire>:
 80005f4:	4801      	ldr	r0, [pc, #4]	; (80005fc <__sfp_lock_acquire+0x8>)
 80005f6:	f000 b8b3 	b.w	8000760 <__retarget_lock_acquire_recursive>
 80005fa:	bf00      	nop
 80005fc:	20000085 	.word	0x20000085

08000600 <__sfp_lock_release>:
 8000600:	4801      	ldr	r0, [pc, #4]	; (8000608 <__sfp_lock_release+0x8>)
 8000602:	f000 b8ae 	b.w	8000762 <__retarget_lock_release_recursive>
 8000606:	bf00      	nop
 8000608:	20000085 	.word	0x20000085

0800060c <__sinit_lock_acquire>:
 800060c:	4801      	ldr	r0, [pc, #4]	; (8000614 <__sinit_lock_acquire+0x8>)
 800060e:	f000 b8a7 	b.w	8000760 <__retarget_lock_acquire_recursive>
 8000612:	bf00      	nop
 8000614:	20000086 	.word	0x20000086

08000618 <__sinit_lock_release>:
 8000618:	4801      	ldr	r0, [pc, #4]	; (8000620 <__sinit_lock_release+0x8>)
 800061a:	f000 b8a2 	b.w	8000762 <__retarget_lock_release_recursive>
 800061e:	bf00      	nop
 8000620:	20000086 	.word	0x20000086

08000624 <__sinit>:
 8000624:	b510      	push	{r4, lr}
 8000626:	4604      	mov	r4, r0
 8000628:	f7ff fff0 	bl	800060c <__sinit_lock_acquire>
 800062c:	69a3      	ldr	r3, [r4, #24]
 800062e:	b11b      	cbz	r3, 8000638 <__sinit+0x14>
 8000630:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000634:	f7ff bff0 	b.w	8000618 <__sinit_lock_release>
 8000638:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 800063c:	6523      	str	r3, [r4, #80]	; 0x50
 800063e:	4b13      	ldr	r3, [pc, #76]	; (800068c <__sinit+0x68>)
 8000640:	4a13      	ldr	r2, [pc, #76]	; (8000690 <__sinit+0x6c>)
 8000642:	681b      	ldr	r3, [r3, #0]
 8000644:	62a2      	str	r2, [r4, #40]	; 0x28
 8000646:	42a3      	cmp	r3, r4
 8000648:	bf04      	itt	eq
 800064a:	2301      	moveq	r3, #1
 800064c:	61a3      	streq	r3, [r4, #24]
 800064e:	4620      	mov	r0, r4
 8000650:	f000 f820 	bl	8000694 <__sfp>
 8000654:	6060      	str	r0, [r4, #4]
 8000656:	4620      	mov	r0, r4
 8000658:	f000 f81c 	bl	8000694 <__sfp>
 800065c:	60a0      	str	r0, [r4, #8]
 800065e:	4620      	mov	r0, r4
 8000660:	f000 f818 	bl	8000694 <__sfp>
 8000664:	2200      	movs	r2, #0
 8000666:	60e0      	str	r0, [r4, #12]
 8000668:	2104      	movs	r1, #4
 800066a:	6860      	ldr	r0, [r4, #4]
 800066c:	f7ff ff82 	bl	8000574 <std>
 8000670:	68a0      	ldr	r0, [r4, #8]
 8000672:	2201      	movs	r2, #1
 8000674:	2109      	movs	r1, #9
 8000676:	f7ff ff7d 	bl	8000574 <std>
 800067a:	68e0      	ldr	r0, [r4, #12]
 800067c:	2202      	movs	r2, #2
 800067e:	2112      	movs	r1, #18
 8000680:	f7ff ff78 	bl	8000574 <std>
 8000684:	2301      	movs	r3, #1
 8000686:	61a3      	str	r3, [r4, #24]
 8000688:	e7d2      	b.n	8000630 <__sinit+0xc>
 800068a:	bf00      	nop
 800068c:	0800152c 	.word	0x0800152c
 8000690:	080005bd 	.word	0x080005bd

08000694 <__sfp>:
 8000694:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000696:	4607      	mov	r7, r0
 8000698:	f7ff ffac 	bl	80005f4 <__sfp_lock_acquire>
 800069c:	4b1e      	ldr	r3, [pc, #120]	; (8000718 <__sfp+0x84>)
 800069e:	681e      	ldr	r6, [r3, #0]
 80006a0:	69b3      	ldr	r3, [r6, #24]
 80006a2:	b913      	cbnz	r3, 80006aa <__sfp+0x16>
 80006a4:	4630      	mov	r0, r6
 80006a6:	f7ff ffbd 	bl	8000624 <__sinit>
 80006aa:	3648      	adds	r6, #72	; 0x48
 80006ac:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 80006b0:	3b01      	subs	r3, #1
 80006b2:	d503      	bpl.n	80006bc <__sfp+0x28>
 80006b4:	6833      	ldr	r3, [r6, #0]
 80006b6:	b30b      	cbz	r3, 80006fc <__sfp+0x68>
 80006b8:	6836      	ldr	r6, [r6, #0]
 80006ba:	e7f7      	b.n	80006ac <__sfp+0x18>
 80006bc:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 80006c0:	b9d5      	cbnz	r5, 80006f8 <__sfp+0x64>
 80006c2:	4b16      	ldr	r3, [pc, #88]	; (800071c <__sfp+0x88>)
 80006c4:	60e3      	str	r3, [r4, #12]
 80006c6:	f104 0058 	add.w	r0, r4, #88	; 0x58
 80006ca:	6665      	str	r5, [r4, #100]	; 0x64
 80006cc:	f000 f847 	bl	800075e <__retarget_lock_init_recursive>
 80006d0:	f7ff ff96 	bl	8000600 <__sfp_lock_release>
 80006d4:	e9c4 5501 	strd	r5, r5, [r4, #4]
 80006d8:	e9c4 5504 	strd	r5, r5, [r4, #16]
 80006dc:	6025      	str	r5, [r4, #0]
 80006de:	61a5      	str	r5, [r4, #24]
 80006e0:	2208      	movs	r2, #8
 80006e2:	4629      	mov	r1, r5
 80006e4:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 80006e8:	f7ff ff24 	bl	8000534 <memset>
 80006ec:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 80006f0:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 80006f4:	4620      	mov	r0, r4
 80006f6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80006f8:	3468      	adds	r4, #104	; 0x68
 80006fa:	e7d9      	b.n	80006b0 <__sfp+0x1c>
 80006fc:	2104      	movs	r1, #4
 80006fe:	4638      	mov	r0, r7
 8000700:	f7ff ff62 	bl	80005c8 <__sfmoreglue>
 8000704:	4604      	mov	r4, r0
 8000706:	6030      	str	r0, [r6, #0]
 8000708:	2800      	cmp	r0, #0
 800070a:	d1d5      	bne.n	80006b8 <__sfp+0x24>
 800070c:	f7ff ff78 	bl	8000600 <__sfp_lock_release>
 8000710:	230c      	movs	r3, #12
 8000712:	603b      	str	r3, [r7, #0]
 8000714:	e7ee      	b.n	80006f4 <__sfp+0x60>
 8000716:	bf00      	nop
 8000718:	0800152c 	.word	0x0800152c
 800071c:	ffff0001 	.word	0xffff0001

08000720 <_fwalk_reent>:
 8000720:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000724:	4606      	mov	r6, r0
 8000726:	4688      	mov	r8, r1
 8000728:	f100 0448 	add.w	r4, r0, #72	; 0x48
 800072c:	2700      	movs	r7, #0
 800072e:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000732:	f1b9 0901 	subs.w	r9, r9, #1
 8000736:	d505      	bpl.n	8000744 <_fwalk_reent+0x24>
 8000738:	6824      	ldr	r4, [r4, #0]
 800073a:	2c00      	cmp	r4, #0
 800073c:	d1f7      	bne.n	800072e <_fwalk_reent+0xe>
 800073e:	4638      	mov	r0, r7
 8000740:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000744:	89ab      	ldrh	r3, [r5, #12]
 8000746:	2b01      	cmp	r3, #1
 8000748:	d907      	bls.n	800075a <_fwalk_reent+0x3a>
 800074a:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 800074e:	3301      	adds	r3, #1
 8000750:	d003      	beq.n	800075a <_fwalk_reent+0x3a>
 8000752:	4629      	mov	r1, r5
 8000754:	4630      	mov	r0, r6
 8000756:	47c0      	blx	r8
 8000758:	4307      	orrs	r7, r0
 800075a:	3568      	adds	r5, #104	; 0x68
 800075c:	e7e9      	b.n	8000732 <_fwalk_reent+0x12>

0800075e <__retarget_lock_init_recursive>:
 800075e:	4770      	bx	lr

08000760 <__retarget_lock_acquire_recursive>:
 8000760:	4770      	bx	lr

08000762 <__retarget_lock_release_recursive>:
 8000762:	4770      	bx	lr

08000764 <sbrk_aligned>:
 8000764:	b570      	push	{r4, r5, r6, lr}
 8000766:	4e0e      	ldr	r6, [pc, #56]	; (80007a0 <sbrk_aligned+0x3c>)
 8000768:	460c      	mov	r4, r1
 800076a:	6831      	ldr	r1, [r6, #0]
 800076c:	4605      	mov	r5, r0
 800076e:	b911      	cbnz	r1, 8000776 <sbrk_aligned+0x12>
 8000770:	f000 fb78 	bl	8000e64 <_sbrk_r>
 8000774:	6030      	str	r0, [r6, #0]
 8000776:	4621      	mov	r1, r4
 8000778:	4628      	mov	r0, r5
 800077a:	f000 fb73 	bl	8000e64 <_sbrk_r>
 800077e:	1c43      	adds	r3, r0, #1
 8000780:	d00a      	beq.n	8000798 <sbrk_aligned+0x34>
 8000782:	1cc4      	adds	r4, r0, #3
 8000784:	f024 0403 	bic.w	r4, r4, #3
 8000788:	42a0      	cmp	r0, r4
 800078a:	d007      	beq.n	800079c <sbrk_aligned+0x38>
 800078c:	1a21      	subs	r1, r4, r0
 800078e:	4628      	mov	r0, r5
 8000790:	f000 fb68 	bl	8000e64 <_sbrk_r>
 8000794:	3001      	adds	r0, #1
 8000796:	d101      	bne.n	800079c <sbrk_aligned+0x38>
 8000798:	f04f 34ff 	mov.w	r4, #4294967295
 800079c:	4620      	mov	r0, r4
 800079e:	bd70      	pop	{r4, r5, r6, pc}
 80007a0:	2000008c 	.word	0x2000008c

080007a4 <_malloc_r>:
 80007a4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80007a8:	1ccd      	adds	r5, r1, #3
 80007aa:	f025 0503 	bic.w	r5, r5, #3
 80007ae:	3508      	adds	r5, #8
 80007b0:	2d0c      	cmp	r5, #12
 80007b2:	bf38      	it	cc
 80007b4:	250c      	movcc	r5, #12
 80007b6:	2d00      	cmp	r5, #0
 80007b8:	4607      	mov	r7, r0
 80007ba:	db01      	blt.n	80007c0 <_malloc_r+0x1c>
 80007bc:	42a9      	cmp	r1, r5
 80007be:	d905      	bls.n	80007cc <_malloc_r+0x28>
 80007c0:	230c      	movs	r3, #12
 80007c2:	603b      	str	r3, [r7, #0]
 80007c4:	2600      	movs	r6, #0
 80007c6:	4630      	mov	r0, r6
 80007c8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80007cc:	4e2e      	ldr	r6, [pc, #184]	; (8000888 <_malloc_r+0xe4>)
 80007ce:	f000 fdb5 	bl	800133c <__malloc_lock>
 80007d2:	6833      	ldr	r3, [r6, #0]
 80007d4:	461c      	mov	r4, r3
 80007d6:	bb34      	cbnz	r4, 8000826 <_malloc_r+0x82>
 80007d8:	4629      	mov	r1, r5
 80007da:	4638      	mov	r0, r7
 80007dc:	f7ff ffc2 	bl	8000764 <sbrk_aligned>
 80007e0:	1c43      	adds	r3, r0, #1
 80007e2:	4604      	mov	r4, r0
 80007e4:	d14d      	bne.n	8000882 <_malloc_r+0xde>
 80007e6:	6834      	ldr	r4, [r6, #0]
 80007e8:	4626      	mov	r6, r4
 80007ea:	2e00      	cmp	r6, #0
 80007ec:	d140      	bne.n	8000870 <_malloc_r+0xcc>
 80007ee:	6823      	ldr	r3, [r4, #0]
 80007f0:	4631      	mov	r1, r6
 80007f2:	4638      	mov	r0, r7
 80007f4:	eb04 0803 	add.w	r8, r4, r3
 80007f8:	f000 fb34 	bl	8000e64 <_sbrk_r>
 80007fc:	4580      	cmp	r8, r0
 80007fe:	d13a      	bne.n	8000876 <_malloc_r+0xd2>
 8000800:	6821      	ldr	r1, [r4, #0]
 8000802:	3503      	adds	r5, #3
 8000804:	1a6d      	subs	r5, r5, r1
 8000806:	f025 0503 	bic.w	r5, r5, #3
 800080a:	3508      	adds	r5, #8
 800080c:	2d0c      	cmp	r5, #12
 800080e:	bf38      	it	cc
 8000810:	250c      	movcc	r5, #12
 8000812:	4629      	mov	r1, r5
 8000814:	4638      	mov	r0, r7
 8000816:	f7ff ffa5 	bl	8000764 <sbrk_aligned>
 800081a:	3001      	adds	r0, #1
 800081c:	d02b      	beq.n	8000876 <_malloc_r+0xd2>
 800081e:	6823      	ldr	r3, [r4, #0]
 8000820:	442b      	add	r3, r5
 8000822:	6023      	str	r3, [r4, #0]
 8000824:	e00e      	b.n	8000844 <_malloc_r+0xa0>
 8000826:	6822      	ldr	r2, [r4, #0]
 8000828:	1b52      	subs	r2, r2, r5
 800082a:	d41e      	bmi.n	800086a <_malloc_r+0xc6>
 800082c:	2a0b      	cmp	r2, #11
 800082e:	d916      	bls.n	800085e <_malloc_r+0xba>
 8000830:	1961      	adds	r1, r4, r5
 8000832:	42a3      	cmp	r3, r4
 8000834:	6025      	str	r5, [r4, #0]
 8000836:	bf18      	it	ne
 8000838:	6059      	strne	r1, [r3, #4]
 800083a:	6863      	ldr	r3, [r4, #4]
 800083c:	bf08      	it	eq
 800083e:	6031      	streq	r1, [r6, #0]
 8000840:	5162      	str	r2, [r4, r5]
 8000842:	604b      	str	r3, [r1, #4]
 8000844:	4638      	mov	r0, r7
 8000846:	f104 060b 	add.w	r6, r4, #11
 800084a:	f000 fd7d 	bl	8001348 <__malloc_unlock>
 800084e:	f026 0607 	bic.w	r6, r6, #7
 8000852:	1d23      	adds	r3, r4, #4
 8000854:	1af2      	subs	r2, r6, r3
 8000856:	d0b6      	beq.n	80007c6 <_malloc_r+0x22>
 8000858:	1b9b      	subs	r3, r3, r6
 800085a:	50a3      	str	r3, [r4, r2]
 800085c:	e7b3      	b.n	80007c6 <_malloc_r+0x22>
 800085e:	6862      	ldr	r2, [r4, #4]
 8000860:	42a3      	cmp	r3, r4
 8000862:	bf0c      	ite	eq
 8000864:	6032      	streq	r2, [r6, #0]
 8000866:	605a      	strne	r2, [r3, #4]
 8000868:	e7ec      	b.n	8000844 <_malloc_r+0xa0>
 800086a:	4623      	mov	r3, r4
 800086c:	6864      	ldr	r4, [r4, #4]
 800086e:	e7b2      	b.n	80007d6 <_malloc_r+0x32>
 8000870:	4634      	mov	r4, r6
 8000872:	6876      	ldr	r6, [r6, #4]
 8000874:	e7b9      	b.n	80007ea <_malloc_r+0x46>
 8000876:	230c      	movs	r3, #12
 8000878:	603b      	str	r3, [r7, #0]
 800087a:	4638      	mov	r0, r7
 800087c:	f000 fd64 	bl	8001348 <__malloc_unlock>
 8000880:	e7a1      	b.n	80007c6 <_malloc_r+0x22>
 8000882:	6025      	str	r5, [r4, #0]
 8000884:	e7de      	b.n	8000844 <_malloc_r+0xa0>
 8000886:	bf00      	nop
 8000888:	20000088 	.word	0x20000088

0800088c <__sfputc_r>:
 800088c:	6893      	ldr	r3, [r2, #8]
 800088e:	3b01      	subs	r3, #1
 8000890:	2b00      	cmp	r3, #0
 8000892:	b410      	push	{r4}
 8000894:	6093      	str	r3, [r2, #8]
 8000896:	da07      	bge.n	80008a8 <__sfputc_r+0x1c>
 8000898:	6994      	ldr	r4, [r2, #24]
 800089a:	42a3      	cmp	r3, r4
 800089c:	db01      	blt.n	80008a2 <__sfputc_r+0x16>
 800089e:	290a      	cmp	r1, #10
 80008a0:	d102      	bne.n	80008a8 <__sfputc_r+0x1c>
 80008a2:	bc10      	pop	{r4}
 80008a4:	f000 bb32 	b.w	8000f0c <__swbuf_r>
 80008a8:	6813      	ldr	r3, [r2, #0]
 80008aa:	1c58      	adds	r0, r3, #1
 80008ac:	6010      	str	r0, [r2, #0]
 80008ae:	7019      	strb	r1, [r3, #0]
 80008b0:	4608      	mov	r0, r1
 80008b2:	bc10      	pop	{r4}
 80008b4:	4770      	bx	lr

080008b6 <__sfputs_r>:
 80008b6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80008b8:	4606      	mov	r6, r0
 80008ba:	460f      	mov	r7, r1
 80008bc:	4614      	mov	r4, r2
 80008be:	18d5      	adds	r5, r2, r3
 80008c0:	42ac      	cmp	r4, r5
 80008c2:	d101      	bne.n	80008c8 <__sfputs_r+0x12>
 80008c4:	2000      	movs	r0, #0
 80008c6:	e007      	b.n	80008d8 <__sfputs_r+0x22>
 80008c8:	f814 1b01 	ldrb.w	r1, [r4], #1
 80008cc:	463a      	mov	r2, r7
 80008ce:	4630      	mov	r0, r6
 80008d0:	f7ff ffdc 	bl	800088c <__sfputc_r>
 80008d4:	1c43      	adds	r3, r0, #1
 80008d6:	d1f3      	bne.n	80008c0 <__sfputs_r+0xa>
 80008d8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

080008dc <_vfiprintf_r>:
 80008dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80008e0:	460d      	mov	r5, r1
 80008e2:	b09d      	sub	sp, #116	; 0x74
 80008e4:	4614      	mov	r4, r2
 80008e6:	4698      	mov	r8, r3
 80008e8:	4606      	mov	r6, r0
 80008ea:	b118      	cbz	r0, 80008f4 <_vfiprintf_r+0x18>
 80008ec:	6983      	ldr	r3, [r0, #24]
 80008ee:	b90b      	cbnz	r3, 80008f4 <_vfiprintf_r+0x18>
 80008f0:	f7ff fe98 	bl	8000624 <__sinit>
 80008f4:	4b89      	ldr	r3, [pc, #548]	; (8000b1c <_vfiprintf_r+0x240>)
 80008f6:	429d      	cmp	r5, r3
 80008f8:	d11b      	bne.n	8000932 <_vfiprintf_r+0x56>
 80008fa:	6875      	ldr	r5, [r6, #4]
 80008fc:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80008fe:	07d9      	lsls	r1, r3, #31
 8000900:	d405      	bmi.n	800090e <_vfiprintf_r+0x32>
 8000902:	89ab      	ldrh	r3, [r5, #12]
 8000904:	059a      	lsls	r2, r3, #22
 8000906:	d402      	bmi.n	800090e <_vfiprintf_r+0x32>
 8000908:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800090a:	f7ff ff29 	bl	8000760 <__retarget_lock_acquire_recursive>
 800090e:	89ab      	ldrh	r3, [r5, #12]
 8000910:	071b      	lsls	r3, r3, #28
 8000912:	d501      	bpl.n	8000918 <_vfiprintf_r+0x3c>
 8000914:	692b      	ldr	r3, [r5, #16]
 8000916:	b9eb      	cbnz	r3, 8000954 <_vfiprintf_r+0x78>
 8000918:	4629      	mov	r1, r5
 800091a:	4630      	mov	r0, r6
 800091c:	f000 fb5a 	bl	8000fd4 <__swsetup_r>
 8000920:	b1c0      	cbz	r0, 8000954 <_vfiprintf_r+0x78>
 8000922:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000924:	07dc      	lsls	r4, r3, #31
 8000926:	d50e      	bpl.n	8000946 <_vfiprintf_r+0x6a>
 8000928:	f04f 30ff 	mov.w	r0, #4294967295
 800092c:	b01d      	add	sp, #116	; 0x74
 800092e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000932:	4b7b      	ldr	r3, [pc, #492]	; (8000b20 <_vfiprintf_r+0x244>)
 8000934:	429d      	cmp	r5, r3
 8000936:	d101      	bne.n	800093c <_vfiprintf_r+0x60>
 8000938:	68b5      	ldr	r5, [r6, #8]
 800093a:	e7df      	b.n	80008fc <_vfiprintf_r+0x20>
 800093c:	4b79      	ldr	r3, [pc, #484]	; (8000b24 <_vfiprintf_r+0x248>)
 800093e:	429d      	cmp	r5, r3
 8000940:	bf08      	it	eq
 8000942:	68f5      	ldreq	r5, [r6, #12]
 8000944:	e7da      	b.n	80008fc <_vfiprintf_r+0x20>
 8000946:	89ab      	ldrh	r3, [r5, #12]
 8000948:	0598      	lsls	r0, r3, #22
 800094a:	d4ed      	bmi.n	8000928 <_vfiprintf_r+0x4c>
 800094c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800094e:	f7ff ff08 	bl	8000762 <__retarget_lock_release_recursive>
 8000952:	e7e9      	b.n	8000928 <_vfiprintf_r+0x4c>
 8000954:	2300      	movs	r3, #0
 8000956:	9309      	str	r3, [sp, #36]	; 0x24
 8000958:	2320      	movs	r3, #32
 800095a:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800095e:	f8cd 800c 	str.w	r8, [sp, #12]
 8000962:	2330      	movs	r3, #48	; 0x30
 8000964:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8000b28 <_vfiprintf_r+0x24c>
 8000968:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800096c:	f04f 0901 	mov.w	r9, #1
 8000970:	4623      	mov	r3, r4
 8000972:	469a      	mov	sl, r3
 8000974:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000978:	b10a      	cbz	r2, 800097e <_vfiprintf_r+0xa2>
 800097a:	2a25      	cmp	r2, #37	; 0x25
 800097c:	d1f9      	bne.n	8000972 <_vfiprintf_r+0x96>
 800097e:	ebba 0b04 	subs.w	fp, sl, r4
 8000982:	d00b      	beq.n	800099c <_vfiprintf_r+0xc0>
 8000984:	465b      	mov	r3, fp
 8000986:	4622      	mov	r2, r4
 8000988:	4629      	mov	r1, r5
 800098a:	4630      	mov	r0, r6
 800098c:	f7ff ff93 	bl	80008b6 <__sfputs_r>
 8000990:	3001      	adds	r0, #1
 8000992:	f000 80aa 	beq.w	8000aea <_vfiprintf_r+0x20e>
 8000996:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8000998:	445a      	add	r2, fp
 800099a:	9209      	str	r2, [sp, #36]	; 0x24
 800099c:	f89a 3000 	ldrb.w	r3, [sl]
 80009a0:	2b00      	cmp	r3, #0
 80009a2:	f000 80a2 	beq.w	8000aea <_vfiprintf_r+0x20e>
 80009a6:	2300      	movs	r3, #0
 80009a8:	f04f 32ff 	mov.w	r2, #4294967295
 80009ac:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80009b0:	f10a 0a01 	add.w	sl, sl, #1
 80009b4:	9304      	str	r3, [sp, #16]
 80009b6:	9307      	str	r3, [sp, #28]
 80009b8:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 80009bc:	931a      	str	r3, [sp, #104]	; 0x68
 80009be:	4654      	mov	r4, sl
 80009c0:	2205      	movs	r2, #5
 80009c2:	f814 1b01 	ldrb.w	r1, [r4], #1
 80009c6:	4858      	ldr	r0, [pc, #352]	; (8000b28 <_vfiprintf_r+0x24c>)
 80009c8:	f7ff fc22 	bl	8000210 <memchr>
 80009cc:	9a04      	ldr	r2, [sp, #16]
 80009ce:	b9d8      	cbnz	r0, 8000a08 <_vfiprintf_r+0x12c>
 80009d0:	06d1      	lsls	r1, r2, #27
 80009d2:	bf44      	itt	mi
 80009d4:	2320      	movmi	r3, #32
 80009d6:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80009da:	0713      	lsls	r3, r2, #28
 80009dc:	bf44      	itt	mi
 80009de:	232b      	movmi	r3, #43	; 0x2b
 80009e0:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80009e4:	f89a 3000 	ldrb.w	r3, [sl]
 80009e8:	2b2a      	cmp	r3, #42	; 0x2a
 80009ea:	d015      	beq.n	8000a18 <_vfiprintf_r+0x13c>
 80009ec:	9a07      	ldr	r2, [sp, #28]
 80009ee:	4654      	mov	r4, sl
 80009f0:	2000      	movs	r0, #0
 80009f2:	f04f 0c0a 	mov.w	ip, #10
 80009f6:	4621      	mov	r1, r4
 80009f8:	f811 3b01 	ldrb.w	r3, [r1], #1
 80009fc:	3b30      	subs	r3, #48	; 0x30
 80009fe:	2b09      	cmp	r3, #9
 8000a00:	d94e      	bls.n	8000aa0 <_vfiprintf_r+0x1c4>
 8000a02:	b1b0      	cbz	r0, 8000a32 <_vfiprintf_r+0x156>
 8000a04:	9207      	str	r2, [sp, #28]
 8000a06:	e014      	b.n	8000a32 <_vfiprintf_r+0x156>
 8000a08:	eba0 0308 	sub.w	r3, r0, r8
 8000a0c:	fa09 f303 	lsl.w	r3, r9, r3
 8000a10:	4313      	orrs	r3, r2
 8000a12:	9304      	str	r3, [sp, #16]
 8000a14:	46a2      	mov	sl, r4
 8000a16:	e7d2      	b.n	80009be <_vfiprintf_r+0xe2>
 8000a18:	9b03      	ldr	r3, [sp, #12]
 8000a1a:	1d19      	adds	r1, r3, #4
 8000a1c:	681b      	ldr	r3, [r3, #0]
 8000a1e:	9103      	str	r1, [sp, #12]
 8000a20:	2b00      	cmp	r3, #0
 8000a22:	bfbb      	ittet	lt
 8000a24:	425b      	neglt	r3, r3
 8000a26:	f042 0202 	orrlt.w	r2, r2, #2
 8000a2a:	9307      	strge	r3, [sp, #28]
 8000a2c:	9307      	strlt	r3, [sp, #28]
 8000a2e:	bfb8      	it	lt
 8000a30:	9204      	strlt	r2, [sp, #16]
 8000a32:	7823      	ldrb	r3, [r4, #0]
 8000a34:	2b2e      	cmp	r3, #46	; 0x2e
 8000a36:	d10c      	bne.n	8000a52 <_vfiprintf_r+0x176>
 8000a38:	7863      	ldrb	r3, [r4, #1]
 8000a3a:	2b2a      	cmp	r3, #42	; 0x2a
 8000a3c:	d135      	bne.n	8000aaa <_vfiprintf_r+0x1ce>
 8000a3e:	9b03      	ldr	r3, [sp, #12]
 8000a40:	1d1a      	adds	r2, r3, #4
 8000a42:	681b      	ldr	r3, [r3, #0]
 8000a44:	9203      	str	r2, [sp, #12]
 8000a46:	2b00      	cmp	r3, #0
 8000a48:	bfb8      	it	lt
 8000a4a:	f04f 33ff 	movlt.w	r3, #4294967295
 8000a4e:	3402      	adds	r4, #2
 8000a50:	9305      	str	r3, [sp, #20]
 8000a52:	f8df a0d8 	ldr.w	sl, [pc, #216]	; 8000b2c <_vfiprintf_r+0x250>
 8000a56:	7821      	ldrb	r1, [r4, #0]
 8000a58:	2203      	movs	r2, #3
 8000a5a:	4650      	mov	r0, sl
 8000a5c:	f7ff fbd8 	bl	8000210 <memchr>
 8000a60:	b140      	cbz	r0, 8000a74 <_vfiprintf_r+0x198>
 8000a62:	2340      	movs	r3, #64	; 0x40
 8000a64:	eba0 000a 	sub.w	r0, r0, sl
 8000a68:	fa03 f000 	lsl.w	r0, r3, r0
 8000a6c:	9b04      	ldr	r3, [sp, #16]
 8000a6e:	4303      	orrs	r3, r0
 8000a70:	3401      	adds	r4, #1
 8000a72:	9304      	str	r3, [sp, #16]
 8000a74:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000a78:	482d      	ldr	r0, [pc, #180]	; (8000b30 <_vfiprintf_r+0x254>)
 8000a7a:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000a7e:	2206      	movs	r2, #6
 8000a80:	f7ff fbc6 	bl	8000210 <memchr>
 8000a84:	2800      	cmp	r0, #0
 8000a86:	d03f      	beq.n	8000b08 <_vfiprintf_r+0x22c>
 8000a88:	4b2a      	ldr	r3, [pc, #168]	; (8000b34 <_vfiprintf_r+0x258>)
 8000a8a:	bb1b      	cbnz	r3, 8000ad4 <_vfiprintf_r+0x1f8>
 8000a8c:	9b03      	ldr	r3, [sp, #12]
 8000a8e:	3307      	adds	r3, #7
 8000a90:	f023 0307 	bic.w	r3, r3, #7
 8000a94:	3308      	adds	r3, #8
 8000a96:	9303      	str	r3, [sp, #12]
 8000a98:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000a9a:	443b      	add	r3, r7
 8000a9c:	9309      	str	r3, [sp, #36]	; 0x24
 8000a9e:	e767      	b.n	8000970 <_vfiprintf_r+0x94>
 8000aa0:	fb0c 3202 	mla	r2, ip, r2, r3
 8000aa4:	460c      	mov	r4, r1
 8000aa6:	2001      	movs	r0, #1
 8000aa8:	e7a5      	b.n	80009f6 <_vfiprintf_r+0x11a>
 8000aaa:	2300      	movs	r3, #0
 8000aac:	3401      	adds	r4, #1
 8000aae:	9305      	str	r3, [sp, #20]
 8000ab0:	4619      	mov	r1, r3
 8000ab2:	f04f 0c0a 	mov.w	ip, #10
 8000ab6:	4620      	mov	r0, r4
 8000ab8:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000abc:	3a30      	subs	r2, #48	; 0x30
 8000abe:	2a09      	cmp	r2, #9
 8000ac0:	d903      	bls.n	8000aca <_vfiprintf_r+0x1ee>
 8000ac2:	2b00      	cmp	r3, #0
 8000ac4:	d0c5      	beq.n	8000a52 <_vfiprintf_r+0x176>
 8000ac6:	9105      	str	r1, [sp, #20]
 8000ac8:	e7c3      	b.n	8000a52 <_vfiprintf_r+0x176>
 8000aca:	fb0c 2101 	mla	r1, ip, r1, r2
 8000ace:	4604      	mov	r4, r0
 8000ad0:	2301      	movs	r3, #1
 8000ad2:	e7f0      	b.n	8000ab6 <_vfiprintf_r+0x1da>
 8000ad4:	ab03      	add	r3, sp, #12
 8000ad6:	9300      	str	r3, [sp, #0]
 8000ad8:	462a      	mov	r2, r5
 8000ada:	4b17      	ldr	r3, [pc, #92]	; (8000b38 <_vfiprintf_r+0x25c>)
 8000adc:	a904      	add	r1, sp, #16
 8000ade:	4630      	mov	r0, r6
 8000ae0:	f3af 8000 	nop.w
 8000ae4:	4607      	mov	r7, r0
 8000ae6:	1c78      	adds	r0, r7, #1
 8000ae8:	d1d6      	bne.n	8000a98 <_vfiprintf_r+0x1bc>
 8000aea:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000aec:	07d9      	lsls	r1, r3, #31
 8000aee:	d405      	bmi.n	8000afc <_vfiprintf_r+0x220>
 8000af0:	89ab      	ldrh	r3, [r5, #12]
 8000af2:	059a      	lsls	r2, r3, #22
 8000af4:	d402      	bmi.n	8000afc <_vfiprintf_r+0x220>
 8000af6:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000af8:	f7ff fe33 	bl	8000762 <__retarget_lock_release_recursive>
 8000afc:	89ab      	ldrh	r3, [r5, #12]
 8000afe:	065b      	lsls	r3, r3, #25
 8000b00:	f53f af12 	bmi.w	8000928 <_vfiprintf_r+0x4c>
 8000b04:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000b06:	e711      	b.n	800092c <_vfiprintf_r+0x50>
 8000b08:	ab03      	add	r3, sp, #12
 8000b0a:	9300      	str	r3, [sp, #0]
 8000b0c:	462a      	mov	r2, r5
 8000b0e:	4b0a      	ldr	r3, [pc, #40]	; (8000b38 <_vfiprintf_r+0x25c>)
 8000b10:	a904      	add	r1, sp, #16
 8000b12:	4630      	mov	r0, r6
 8000b14:	f000 f880 	bl	8000c18 <_printf_i>
 8000b18:	e7e4      	b.n	8000ae4 <_vfiprintf_r+0x208>
 8000b1a:	bf00      	nop
 8000b1c:	08001550 	.word	0x08001550
 8000b20:	08001570 	.word	0x08001570
 8000b24:	08001530 	.word	0x08001530
 8000b28:	08001590 	.word	0x08001590
 8000b2c:	08001596 	.word	0x08001596
 8000b30:	0800159a 	.word	0x0800159a
 8000b34:	00000000 	.word	0x00000000
 8000b38:	080008b7 	.word	0x080008b7

08000b3c <_printf_common>:
 8000b3c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000b40:	4616      	mov	r6, r2
 8000b42:	4699      	mov	r9, r3
 8000b44:	688a      	ldr	r2, [r1, #8]
 8000b46:	690b      	ldr	r3, [r1, #16]
 8000b48:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8000b4c:	4293      	cmp	r3, r2
 8000b4e:	bfb8      	it	lt
 8000b50:	4613      	movlt	r3, r2
 8000b52:	6033      	str	r3, [r6, #0]
 8000b54:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8000b58:	4607      	mov	r7, r0
 8000b5a:	460c      	mov	r4, r1
 8000b5c:	b10a      	cbz	r2, 8000b62 <_printf_common+0x26>
 8000b5e:	3301      	adds	r3, #1
 8000b60:	6033      	str	r3, [r6, #0]
 8000b62:	6823      	ldr	r3, [r4, #0]
 8000b64:	0699      	lsls	r1, r3, #26
 8000b66:	bf42      	ittt	mi
 8000b68:	6833      	ldrmi	r3, [r6, #0]
 8000b6a:	3302      	addmi	r3, #2
 8000b6c:	6033      	strmi	r3, [r6, #0]
 8000b6e:	6825      	ldr	r5, [r4, #0]
 8000b70:	f015 0506 	ands.w	r5, r5, #6
 8000b74:	d106      	bne.n	8000b84 <_printf_common+0x48>
 8000b76:	f104 0a19 	add.w	sl, r4, #25
 8000b7a:	68e3      	ldr	r3, [r4, #12]
 8000b7c:	6832      	ldr	r2, [r6, #0]
 8000b7e:	1a9b      	subs	r3, r3, r2
 8000b80:	42ab      	cmp	r3, r5
 8000b82:	dc26      	bgt.n	8000bd2 <_printf_common+0x96>
 8000b84:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8000b88:	1e13      	subs	r3, r2, #0
 8000b8a:	6822      	ldr	r2, [r4, #0]
 8000b8c:	bf18      	it	ne
 8000b8e:	2301      	movne	r3, #1
 8000b90:	0692      	lsls	r2, r2, #26
 8000b92:	d42b      	bmi.n	8000bec <_printf_common+0xb0>
 8000b94:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000b98:	4649      	mov	r1, r9
 8000b9a:	4638      	mov	r0, r7
 8000b9c:	47c0      	blx	r8
 8000b9e:	3001      	adds	r0, #1
 8000ba0:	d01e      	beq.n	8000be0 <_printf_common+0xa4>
 8000ba2:	6823      	ldr	r3, [r4, #0]
 8000ba4:	68e5      	ldr	r5, [r4, #12]
 8000ba6:	6832      	ldr	r2, [r6, #0]
 8000ba8:	f003 0306 	and.w	r3, r3, #6
 8000bac:	2b04      	cmp	r3, #4
 8000bae:	bf08      	it	eq
 8000bb0:	1aad      	subeq	r5, r5, r2
 8000bb2:	68a3      	ldr	r3, [r4, #8]
 8000bb4:	6922      	ldr	r2, [r4, #16]
 8000bb6:	bf0c      	ite	eq
 8000bb8:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000bbc:	2500      	movne	r5, #0
 8000bbe:	4293      	cmp	r3, r2
 8000bc0:	bfc4      	itt	gt
 8000bc2:	1a9b      	subgt	r3, r3, r2
 8000bc4:	18ed      	addgt	r5, r5, r3
 8000bc6:	2600      	movs	r6, #0
 8000bc8:	341a      	adds	r4, #26
 8000bca:	42b5      	cmp	r5, r6
 8000bcc:	d11a      	bne.n	8000c04 <_printf_common+0xc8>
 8000bce:	2000      	movs	r0, #0
 8000bd0:	e008      	b.n	8000be4 <_printf_common+0xa8>
 8000bd2:	2301      	movs	r3, #1
 8000bd4:	4652      	mov	r2, sl
 8000bd6:	4649      	mov	r1, r9
 8000bd8:	4638      	mov	r0, r7
 8000bda:	47c0      	blx	r8
 8000bdc:	3001      	adds	r0, #1
 8000bde:	d103      	bne.n	8000be8 <_printf_common+0xac>
 8000be0:	f04f 30ff 	mov.w	r0, #4294967295
 8000be4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000be8:	3501      	adds	r5, #1
 8000bea:	e7c6      	b.n	8000b7a <_printf_common+0x3e>
 8000bec:	18e1      	adds	r1, r4, r3
 8000bee:	1c5a      	adds	r2, r3, #1
 8000bf0:	2030      	movs	r0, #48	; 0x30
 8000bf2:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8000bf6:	4422      	add	r2, r4
 8000bf8:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8000bfc:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8000c00:	3302      	adds	r3, #2
 8000c02:	e7c7      	b.n	8000b94 <_printf_common+0x58>
 8000c04:	2301      	movs	r3, #1
 8000c06:	4622      	mov	r2, r4
 8000c08:	4649      	mov	r1, r9
 8000c0a:	4638      	mov	r0, r7
 8000c0c:	47c0      	blx	r8
 8000c0e:	3001      	adds	r0, #1
 8000c10:	d0e6      	beq.n	8000be0 <_printf_common+0xa4>
 8000c12:	3601      	adds	r6, #1
 8000c14:	e7d9      	b.n	8000bca <_printf_common+0x8e>
	...

08000c18 <_printf_i>:
 8000c18:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000c1c:	7e0f      	ldrb	r7, [r1, #24]
 8000c1e:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8000c20:	2f78      	cmp	r7, #120	; 0x78
 8000c22:	4691      	mov	r9, r2
 8000c24:	4680      	mov	r8, r0
 8000c26:	460c      	mov	r4, r1
 8000c28:	469a      	mov	sl, r3
 8000c2a:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8000c2e:	d807      	bhi.n	8000c40 <_printf_i+0x28>
 8000c30:	2f62      	cmp	r7, #98	; 0x62
 8000c32:	d80a      	bhi.n	8000c4a <_printf_i+0x32>
 8000c34:	2f00      	cmp	r7, #0
 8000c36:	f000 80d8 	beq.w	8000dea <_printf_i+0x1d2>
 8000c3a:	2f58      	cmp	r7, #88	; 0x58
 8000c3c:	f000 80a3 	beq.w	8000d86 <_printf_i+0x16e>
 8000c40:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000c44:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8000c48:	e03a      	b.n	8000cc0 <_printf_i+0xa8>
 8000c4a:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8000c4e:	2b15      	cmp	r3, #21
 8000c50:	d8f6      	bhi.n	8000c40 <_printf_i+0x28>
 8000c52:	a101      	add	r1, pc, #4	; (adr r1, 8000c58 <_printf_i+0x40>)
 8000c54:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8000c58:	08000cb1 	.word	0x08000cb1
 8000c5c:	08000cc5 	.word	0x08000cc5
 8000c60:	08000c41 	.word	0x08000c41
 8000c64:	08000c41 	.word	0x08000c41
 8000c68:	08000c41 	.word	0x08000c41
 8000c6c:	08000c41 	.word	0x08000c41
 8000c70:	08000cc5 	.word	0x08000cc5
 8000c74:	08000c41 	.word	0x08000c41
 8000c78:	08000c41 	.word	0x08000c41
 8000c7c:	08000c41 	.word	0x08000c41
 8000c80:	08000c41 	.word	0x08000c41
 8000c84:	08000dd1 	.word	0x08000dd1
 8000c88:	08000cf5 	.word	0x08000cf5
 8000c8c:	08000db3 	.word	0x08000db3
 8000c90:	08000c41 	.word	0x08000c41
 8000c94:	08000c41 	.word	0x08000c41
 8000c98:	08000df3 	.word	0x08000df3
 8000c9c:	08000c41 	.word	0x08000c41
 8000ca0:	08000cf5 	.word	0x08000cf5
 8000ca4:	08000c41 	.word	0x08000c41
 8000ca8:	08000c41 	.word	0x08000c41
 8000cac:	08000dbb 	.word	0x08000dbb
 8000cb0:	682b      	ldr	r3, [r5, #0]
 8000cb2:	1d1a      	adds	r2, r3, #4
 8000cb4:	681b      	ldr	r3, [r3, #0]
 8000cb6:	602a      	str	r2, [r5, #0]
 8000cb8:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000cbc:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8000cc0:	2301      	movs	r3, #1
 8000cc2:	e0a3      	b.n	8000e0c <_printf_i+0x1f4>
 8000cc4:	6820      	ldr	r0, [r4, #0]
 8000cc6:	6829      	ldr	r1, [r5, #0]
 8000cc8:	0606      	lsls	r6, r0, #24
 8000cca:	f101 0304 	add.w	r3, r1, #4
 8000cce:	d50a      	bpl.n	8000ce6 <_printf_i+0xce>
 8000cd0:	680e      	ldr	r6, [r1, #0]
 8000cd2:	602b      	str	r3, [r5, #0]
 8000cd4:	2e00      	cmp	r6, #0
 8000cd6:	da03      	bge.n	8000ce0 <_printf_i+0xc8>
 8000cd8:	232d      	movs	r3, #45	; 0x2d
 8000cda:	4276      	negs	r6, r6
 8000cdc:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000ce0:	485e      	ldr	r0, [pc, #376]	; (8000e5c <_printf_i+0x244>)
 8000ce2:	230a      	movs	r3, #10
 8000ce4:	e019      	b.n	8000d1a <_printf_i+0x102>
 8000ce6:	680e      	ldr	r6, [r1, #0]
 8000ce8:	602b      	str	r3, [r5, #0]
 8000cea:	f010 0f40 	tst.w	r0, #64	; 0x40
 8000cee:	bf18      	it	ne
 8000cf0:	b236      	sxthne	r6, r6
 8000cf2:	e7ef      	b.n	8000cd4 <_printf_i+0xbc>
 8000cf4:	682b      	ldr	r3, [r5, #0]
 8000cf6:	6820      	ldr	r0, [r4, #0]
 8000cf8:	1d19      	adds	r1, r3, #4
 8000cfa:	6029      	str	r1, [r5, #0]
 8000cfc:	0601      	lsls	r1, r0, #24
 8000cfe:	d501      	bpl.n	8000d04 <_printf_i+0xec>
 8000d00:	681e      	ldr	r6, [r3, #0]
 8000d02:	e002      	b.n	8000d0a <_printf_i+0xf2>
 8000d04:	0646      	lsls	r6, r0, #25
 8000d06:	d5fb      	bpl.n	8000d00 <_printf_i+0xe8>
 8000d08:	881e      	ldrh	r6, [r3, #0]
 8000d0a:	4854      	ldr	r0, [pc, #336]	; (8000e5c <_printf_i+0x244>)
 8000d0c:	2f6f      	cmp	r7, #111	; 0x6f
 8000d0e:	bf0c      	ite	eq
 8000d10:	2308      	moveq	r3, #8
 8000d12:	230a      	movne	r3, #10
 8000d14:	2100      	movs	r1, #0
 8000d16:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8000d1a:	6865      	ldr	r5, [r4, #4]
 8000d1c:	60a5      	str	r5, [r4, #8]
 8000d1e:	2d00      	cmp	r5, #0
 8000d20:	bfa2      	ittt	ge
 8000d22:	6821      	ldrge	r1, [r4, #0]
 8000d24:	f021 0104 	bicge.w	r1, r1, #4
 8000d28:	6021      	strge	r1, [r4, #0]
 8000d2a:	b90e      	cbnz	r6, 8000d30 <_printf_i+0x118>
 8000d2c:	2d00      	cmp	r5, #0
 8000d2e:	d04d      	beq.n	8000dcc <_printf_i+0x1b4>
 8000d30:	4615      	mov	r5, r2
 8000d32:	fbb6 f1f3 	udiv	r1, r6, r3
 8000d36:	fb03 6711 	mls	r7, r3, r1, r6
 8000d3a:	5dc7      	ldrb	r7, [r0, r7]
 8000d3c:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8000d40:	4637      	mov	r7, r6
 8000d42:	42bb      	cmp	r3, r7
 8000d44:	460e      	mov	r6, r1
 8000d46:	d9f4      	bls.n	8000d32 <_printf_i+0x11a>
 8000d48:	2b08      	cmp	r3, #8
 8000d4a:	d10b      	bne.n	8000d64 <_printf_i+0x14c>
 8000d4c:	6823      	ldr	r3, [r4, #0]
 8000d4e:	07de      	lsls	r6, r3, #31
 8000d50:	d508      	bpl.n	8000d64 <_printf_i+0x14c>
 8000d52:	6923      	ldr	r3, [r4, #16]
 8000d54:	6861      	ldr	r1, [r4, #4]
 8000d56:	4299      	cmp	r1, r3
 8000d58:	bfde      	ittt	le
 8000d5a:	2330      	movle	r3, #48	; 0x30
 8000d5c:	f805 3c01 	strble.w	r3, [r5, #-1]
 8000d60:	f105 35ff 	addle.w	r5, r5, #4294967295
 8000d64:	1b52      	subs	r2, r2, r5
 8000d66:	6122      	str	r2, [r4, #16]
 8000d68:	f8cd a000 	str.w	sl, [sp]
 8000d6c:	464b      	mov	r3, r9
 8000d6e:	aa03      	add	r2, sp, #12
 8000d70:	4621      	mov	r1, r4
 8000d72:	4640      	mov	r0, r8
 8000d74:	f7ff fee2 	bl	8000b3c <_printf_common>
 8000d78:	3001      	adds	r0, #1
 8000d7a:	d14c      	bne.n	8000e16 <_printf_i+0x1fe>
 8000d7c:	f04f 30ff 	mov.w	r0, #4294967295
 8000d80:	b004      	add	sp, #16
 8000d82:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000d86:	4835      	ldr	r0, [pc, #212]	; (8000e5c <_printf_i+0x244>)
 8000d88:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 8000d8c:	6829      	ldr	r1, [r5, #0]
 8000d8e:	6823      	ldr	r3, [r4, #0]
 8000d90:	f851 6b04 	ldr.w	r6, [r1], #4
 8000d94:	6029      	str	r1, [r5, #0]
 8000d96:	061d      	lsls	r5, r3, #24
 8000d98:	d514      	bpl.n	8000dc4 <_printf_i+0x1ac>
 8000d9a:	07df      	lsls	r7, r3, #31
 8000d9c:	bf44      	itt	mi
 8000d9e:	f043 0320 	orrmi.w	r3, r3, #32
 8000da2:	6023      	strmi	r3, [r4, #0]
 8000da4:	b91e      	cbnz	r6, 8000dae <_printf_i+0x196>
 8000da6:	6823      	ldr	r3, [r4, #0]
 8000da8:	f023 0320 	bic.w	r3, r3, #32
 8000dac:	6023      	str	r3, [r4, #0]
 8000dae:	2310      	movs	r3, #16
 8000db0:	e7b0      	b.n	8000d14 <_printf_i+0xfc>
 8000db2:	6823      	ldr	r3, [r4, #0]
 8000db4:	f043 0320 	orr.w	r3, r3, #32
 8000db8:	6023      	str	r3, [r4, #0]
 8000dba:	2378      	movs	r3, #120	; 0x78
 8000dbc:	4828      	ldr	r0, [pc, #160]	; (8000e60 <_printf_i+0x248>)
 8000dbe:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8000dc2:	e7e3      	b.n	8000d8c <_printf_i+0x174>
 8000dc4:	0659      	lsls	r1, r3, #25
 8000dc6:	bf48      	it	mi
 8000dc8:	b2b6      	uxthmi	r6, r6
 8000dca:	e7e6      	b.n	8000d9a <_printf_i+0x182>
 8000dcc:	4615      	mov	r5, r2
 8000dce:	e7bb      	b.n	8000d48 <_printf_i+0x130>
 8000dd0:	682b      	ldr	r3, [r5, #0]
 8000dd2:	6826      	ldr	r6, [r4, #0]
 8000dd4:	6961      	ldr	r1, [r4, #20]
 8000dd6:	1d18      	adds	r0, r3, #4
 8000dd8:	6028      	str	r0, [r5, #0]
 8000dda:	0635      	lsls	r5, r6, #24
 8000ddc:	681b      	ldr	r3, [r3, #0]
 8000dde:	d501      	bpl.n	8000de4 <_printf_i+0x1cc>
 8000de0:	6019      	str	r1, [r3, #0]
 8000de2:	e002      	b.n	8000dea <_printf_i+0x1d2>
 8000de4:	0670      	lsls	r0, r6, #25
 8000de6:	d5fb      	bpl.n	8000de0 <_printf_i+0x1c8>
 8000de8:	8019      	strh	r1, [r3, #0]
 8000dea:	2300      	movs	r3, #0
 8000dec:	6123      	str	r3, [r4, #16]
 8000dee:	4615      	mov	r5, r2
 8000df0:	e7ba      	b.n	8000d68 <_printf_i+0x150>
 8000df2:	682b      	ldr	r3, [r5, #0]
 8000df4:	1d1a      	adds	r2, r3, #4
 8000df6:	602a      	str	r2, [r5, #0]
 8000df8:	681d      	ldr	r5, [r3, #0]
 8000dfa:	6862      	ldr	r2, [r4, #4]
 8000dfc:	2100      	movs	r1, #0
 8000dfe:	4628      	mov	r0, r5
 8000e00:	f7ff fa06 	bl	8000210 <memchr>
 8000e04:	b108      	cbz	r0, 8000e0a <_printf_i+0x1f2>
 8000e06:	1b40      	subs	r0, r0, r5
 8000e08:	6060      	str	r0, [r4, #4]
 8000e0a:	6863      	ldr	r3, [r4, #4]
 8000e0c:	6123      	str	r3, [r4, #16]
 8000e0e:	2300      	movs	r3, #0
 8000e10:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000e14:	e7a8      	b.n	8000d68 <_printf_i+0x150>
 8000e16:	6923      	ldr	r3, [r4, #16]
 8000e18:	462a      	mov	r2, r5
 8000e1a:	4649      	mov	r1, r9
 8000e1c:	4640      	mov	r0, r8
 8000e1e:	47d0      	blx	sl
 8000e20:	3001      	adds	r0, #1
 8000e22:	d0ab      	beq.n	8000d7c <_printf_i+0x164>
 8000e24:	6823      	ldr	r3, [r4, #0]
 8000e26:	079b      	lsls	r3, r3, #30
 8000e28:	d413      	bmi.n	8000e52 <_printf_i+0x23a>
 8000e2a:	68e0      	ldr	r0, [r4, #12]
 8000e2c:	9b03      	ldr	r3, [sp, #12]
 8000e2e:	4298      	cmp	r0, r3
 8000e30:	bfb8      	it	lt
 8000e32:	4618      	movlt	r0, r3
 8000e34:	e7a4      	b.n	8000d80 <_printf_i+0x168>
 8000e36:	2301      	movs	r3, #1
 8000e38:	4632      	mov	r2, r6
 8000e3a:	4649      	mov	r1, r9
 8000e3c:	4640      	mov	r0, r8
 8000e3e:	47d0      	blx	sl
 8000e40:	3001      	adds	r0, #1
 8000e42:	d09b      	beq.n	8000d7c <_printf_i+0x164>
 8000e44:	3501      	adds	r5, #1
 8000e46:	68e3      	ldr	r3, [r4, #12]
 8000e48:	9903      	ldr	r1, [sp, #12]
 8000e4a:	1a5b      	subs	r3, r3, r1
 8000e4c:	42ab      	cmp	r3, r5
 8000e4e:	dcf2      	bgt.n	8000e36 <_printf_i+0x21e>
 8000e50:	e7eb      	b.n	8000e2a <_printf_i+0x212>
 8000e52:	2500      	movs	r5, #0
 8000e54:	f104 0619 	add.w	r6, r4, #25
 8000e58:	e7f5      	b.n	8000e46 <_printf_i+0x22e>
 8000e5a:	bf00      	nop
 8000e5c:	080015a1 	.word	0x080015a1
 8000e60:	080015b2 	.word	0x080015b2

08000e64 <_sbrk_r>:
 8000e64:	b538      	push	{r3, r4, r5, lr}
 8000e66:	4d06      	ldr	r5, [pc, #24]	; (8000e80 <_sbrk_r+0x1c>)
 8000e68:	2300      	movs	r3, #0
 8000e6a:	4604      	mov	r4, r0
 8000e6c:	4608      	mov	r0, r1
 8000e6e:	602b      	str	r3, [r5, #0]
 8000e70:	f7ff fad6 	bl	8000420 <_sbrk>
 8000e74:	1c43      	adds	r3, r0, #1
 8000e76:	d102      	bne.n	8000e7e <_sbrk_r+0x1a>
 8000e78:	682b      	ldr	r3, [r5, #0]
 8000e7a:	b103      	cbz	r3, 8000e7e <_sbrk_r+0x1a>
 8000e7c:	6023      	str	r3, [r4, #0]
 8000e7e:	bd38      	pop	{r3, r4, r5, pc}
 8000e80:	20000090 	.word	0x20000090

08000e84 <__sread>:
 8000e84:	b510      	push	{r4, lr}
 8000e86:	460c      	mov	r4, r1
 8000e88:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000e8c:	f000 faac 	bl	80013e8 <_read_r>
 8000e90:	2800      	cmp	r0, #0
 8000e92:	bfab      	itete	ge
 8000e94:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8000e96:	89a3      	ldrhlt	r3, [r4, #12]
 8000e98:	181b      	addge	r3, r3, r0
 8000e9a:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8000e9e:	bfac      	ite	ge
 8000ea0:	6563      	strge	r3, [r4, #84]	; 0x54
 8000ea2:	81a3      	strhlt	r3, [r4, #12]
 8000ea4:	bd10      	pop	{r4, pc}

08000ea6 <__swrite>:
 8000ea6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000eaa:	461f      	mov	r7, r3
 8000eac:	898b      	ldrh	r3, [r1, #12]
 8000eae:	05db      	lsls	r3, r3, #23
 8000eb0:	4605      	mov	r5, r0
 8000eb2:	460c      	mov	r4, r1
 8000eb4:	4616      	mov	r6, r2
 8000eb6:	d505      	bpl.n	8000ec4 <__swrite+0x1e>
 8000eb8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000ebc:	2302      	movs	r3, #2
 8000ebe:	2200      	movs	r2, #0
 8000ec0:	f000 f9c4 	bl	800124c <_lseek_r>
 8000ec4:	89a3      	ldrh	r3, [r4, #12]
 8000ec6:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000eca:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000ece:	81a3      	strh	r3, [r4, #12]
 8000ed0:	4632      	mov	r2, r6
 8000ed2:	463b      	mov	r3, r7
 8000ed4:	4628      	mov	r0, r5
 8000ed6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000eda:	f000 b869 	b.w	8000fb0 <_write_r>

08000ede <__sseek>:
 8000ede:	b510      	push	{r4, lr}
 8000ee0:	460c      	mov	r4, r1
 8000ee2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000ee6:	f000 f9b1 	bl	800124c <_lseek_r>
 8000eea:	1c43      	adds	r3, r0, #1
 8000eec:	89a3      	ldrh	r3, [r4, #12]
 8000eee:	bf15      	itete	ne
 8000ef0:	6560      	strne	r0, [r4, #84]	; 0x54
 8000ef2:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8000ef6:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8000efa:	81a3      	strheq	r3, [r4, #12]
 8000efc:	bf18      	it	ne
 8000efe:	81a3      	strhne	r3, [r4, #12]
 8000f00:	bd10      	pop	{r4, pc}

08000f02 <__sclose>:
 8000f02:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000f06:	f000 b8d3 	b.w	80010b0 <_close_r>
	...

08000f0c <__swbuf_r>:
 8000f0c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000f0e:	460e      	mov	r6, r1
 8000f10:	4614      	mov	r4, r2
 8000f12:	4605      	mov	r5, r0
 8000f14:	b118      	cbz	r0, 8000f1e <__swbuf_r+0x12>
 8000f16:	6983      	ldr	r3, [r0, #24]
 8000f18:	b90b      	cbnz	r3, 8000f1e <__swbuf_r+0x12>
 8000f1a:	f7ff fb83 	bl	8000624 <__sinit>
 8000f1e:	4b21      	ldr	r3, [pc, #132]	; (8000fa4 <__swbuf_r+0x98>)
 8000f20:	429c      	cmp	r4, r3
 8000f22:	d12b      	bne.n	8000f7c <__swbuf_r+0x70>
 8000f24:	686c      	ldr	r4, [r5, #4]
 8000f26:	69a3      	ldr	r3, [r4, #24]
 8000f28:	60a3      	str	r3, [r4, #8]
 8000f2a:	89a3      	ldrh	r3, [r4, #12]
 8000f2c:	071a      	lsls	r2, r3, #28
 8000f2e:	d52f      	bpl.n	8000f90 <__swbuf_r+0x84>
 8000f30:	6923      	ldr	r3, [r4, #16]
 8000f32:	b36b      	cbz	r3, 8000f90 <__swbuf_r+0x84>
 8000f34:	6923      	ldr	r3, [r4, #16]
 8000f36:	6820      	ldr	r0, [r4, #0]
 8000f38:	1ac0      	subs	r0, r0, r3
 8000f3a:	6963      	ldr	r3, [r4, #20]
 8000f3c:	b2f6      	uxtb	r6, r6
 8000f3e:	4283      	cmp	r3, r0
 8000f40:	4637      	mov	r7, r6
 8000f42:	dc04      	bgt.n	8000f4e <__swbuf_r+0x42>
 8000f44:	4621      	mov	r1, r4
 8000f46:	4628      	mov	r0, r5
 8000f48:	f000 f944 	bl	80011d4 <_fflush_r>
 8000f4c:	bb30      	cbnz	r0, 8000f9c <__swbuf_r+0x90>
 8000f4e:	68a3      	ldr	r3, [r4, #8]
 8000f50:	3b01      	subs	r3, #1
 8000f52:	60a3      	str	r3, [r4, #8]
 8000f54:	6823      	ldr	r3, [r4, #0]
 8000f56:	1c5a      	adds	r2, r3, #1
 8000f58:	6022      	str	r2, [r4, #0]
 8000f5a:	701e      	strb	r6, [r3, #0]
 8000f5c:	6963      	ldr	r3, [r4, #20]
 8000f5e:	3001      	adds	r0, #1
 8000f60:	4283      	cmp	r3, r0
 8000f62:	d004      	beq.n	8000f6e <__swbuf_r+0x62>
 8000f64:	89a3      	ldrh	r3, [r4, #12]
 8000f66:	07db      	lsls	r3, r3, #31
 8000f68:	d506      	bpl.n	8000f78 <__swbuf_r+0x6c>
 8000f6a:	2e0a      	cmp	r6, #10
 8000f6c:	d104      	bne.n	8000f78 <__swbuf_r+0x6c>
 8000f6e:	4621      	mov	r1, r4
 8000f70:	4628      	mov	r0, r5
 8000f72:	f000 f92f 	bl	80011d4 <_fflush_r>
 8000f76:	b988      	cbnz	r0, 8000f9c <__swbuf_r+0x90>
 8000f78:	4638      	mov	r0, r7
 8000f7a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000f7c:	4b0a      	ldr	r3, [pc, #40]	; (8000fa8 <__swbuf_r+0x9c>)
 8000f7e:	429c      	cmp	r4, r3
 8000f80:	d101      	bne.n	8000f86 <__swbuf_r+0x7a>
 8000f82:	68ac      	ldr	r4, [r5, #8]
 8000f84:	e7cf      	b.n	8000f26 <__swbuf_r+0x1a>
 8000f86:	4b09      	ldr	r3, [pc, #36]	; (8000fac <__swbuf_r+0xa0>)
 8000f88:	429c      	cmp	r4, r3
 8000f8a:	bf08      	it	eq
 8000f8c:	68ec      	ldreq	r4, [r5, #12]
 8000f8e:	e7ca      	b.n	8000f26 <__swbuf_r+0x1a>
 8000f90:	4621      	mov	r1, r4
 8000f92:	4628      	mov	r0, r5
 8000f94:	f000 f81e 	bl	8000fd4 <__swsetup_r>
 8000f98:	2800      	cmp	r0, #0
 8000f9a:	d0cb      	beq.n	8000f34 <__swbuf_r+0x28>
 8000f9c:	f04f 37ff 	mov.w	r7, #4294967295
 8000fa0:	e7ea      	b.n	8000f78 <__swbuf_r+0x6c>
 8000fa2:	bf00      	nop
 8000fa4:	08001550 	.word	0x08001550
 8000fa8:	08001570 	.word	0x08001570
 8000fac:	08001530 	.word	0x08001530

08000fb0 <_write_r>:
 8000fb0:	b538      	push	{r3, r4, r5, lr}
 8000fb2:	4d07      	ldr	r5, [pc, #28]	; (8000fd0 <_write_r+0x20>)
 8000fb4:	4604      	mov	r4, r0
 8000fb6:	4608      	mov	r0, r1
 8000fb8:	4611      	mov	r1, r2
 8000fba:	2200      	movs	r2, #0
 8000fbc:	602a      	str	r2, [r5, #0]
 8000fbe:	461a      	mov	r2, r3
 8000fc0:	f7ff f9e1 	bl	8000386 <_write>
 8000fc4:	1c43      	adds	r3, r0, #1
 8000fc6:	d102      	bne.n	8000fce <_write_r+0x1e>
 8000fc8:	682b      	ldr	r3, [r5, #0]
 8000fca:	b103      	cbz	r3, 8000fce <_write_r+0x1e>
 8000fcc:	6023      	str	r3, [r4, #0]
 8000fce:	bd38      	pop	{r3, r4, r5, pc}
 8000fd0:	20000090 	.word	0x20000090

08000fd4 <__swsetup_r>:
 8000fd4:	4b32      	ldr	r3, [pc, #200]	; (80010a0 <__swsetup_r+0xcc>)
 8000fd6:	b570      	push	{r4, r5, r6, lr}
 8000fd8:	681d      	ldr	r5, [r3, #0]
 8000fda:	4606      	mov	r6, r0
 8000fdc:	460c      	mov	r4, r1
 8000fde:	b125      	cbz	r5, 8000fea <__swsetup_r+0x16>
 8000fe0:	69ab      	ldr	r3, [r5, #24]
 8000fe2:	b913      	cbnz	r3, 8000fea <__swsetup_r+0x16>
 8000fe4:	4628      	mov	r0, r5
 8000fe6:	f7ff fb1d 	bl	8000624 <__sinit>
 8000fea:	4b2e      	ldr	r3, [pc, #184]	; (80010a4 <__swsetup_r+0xd0>)
 8000fec:	429c      	cmp	r4, r3
 8000fee:	d10f      	bne.n	8001010 <__swsetup_r+0x3c>
 8000ff0:	686c      	ldr	r4, [r5, #4]
 8000ff2:	89a3      	ldrh	r3, [r4, #12]
 8000ff4:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8000ff8:	0719      	lsls	r1, r3, #28
 8000ffa:	d42c      	bmi.n	8001056 <__swsetup_r+0x82>
 8000ffc:	06dd      	lsls	r5, r3, #27
 8000ffe:	d411      	bmi.n	8001024 <__swsetup_r+0x50>
 8001000:	2309      	movs	r3, #9
 8001002:	6033      	str	r3, [r6, #0]
 8001004:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8001008:	81a3      	strh	r3, [r4, #12]
 800100a:	f04f 30ff 	mov.w	r0, #4294967295
 800100e:	e03e      	b.n	800108e <__swsetup_r+0xba>
 8001010:	4b25      	ldr	r3, [pc, #148]	; (80010a8 <__swsetup_r+0xd4>)
 8001012:	429c      	cmp	r4, r3
 8001014:	d101      	bne.n	800101a <__swsetup_r+0x46>
 8001016:	68ac      	ldr	r4, [r5, #8]
 8001018:	e7eb      	b.n	8000ff2 <__swsetup_r+0x1e>
 800101a:	4b24      	ldr	r3, [pc, #144]	; (80010ac <__swsetup_r+0xd8>)
 800101c:	429c      	cmp	r4, r3
 800101e:	bf08      	it	eq
 8001020:	68ec      	ldreq	r4, [r5, #12]
 8001022:	e7e6      	b.n	8000ff2 <__swsetup_r+0x1e>
 8001024:	0758      	lsls	r0, r3, #29
 8001026:	d512      	bpl.n	800104e <__swsetup_r+0x7a>
 8001028:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800102a:	b141      	cbz	r1, 800103e <__swsetup_r+0x6a>
 800102c:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8001030:	4299      	cmp	r1, r3
 8001032:	d002      	beq.n	800103a <__swsetup_r+0x66>
 8001034:	4630      	mov	r0, r6
 8001036:	f000 f98d 	bl	8001354 <_free_r>
 800103a:	2300      	movs	r3, #0
 800103c:	6363      	str	r3, [r4, #52]	; 0x34
 800103e:	89a3      	ldrh	r3, [r4, #12]
 8001040:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8001044:	81a3      	strh	r3, [r4, #12]
 8001046:	2300      	movs	r3, #0
 8001048:	6063      	str	r3, [r4, #4]
 800104a:	6923      	ldr	r3, [r4, #16]
 800104c:	6023      	str	r3, [r4, #0]
 800104e:	89a3      	ldrh	r3, [r4, #12]
 8001050:	f043 0308 	orr.w	r3, r3, #8
 8001054:	81a3      	strh	r3, [r4, #12]
 8001056:	6923      	ldr	r3, [r4, #16]
 8001058:	b94b      	cbnz	r3, 800106e <__swsetup_r+0x9a>
 800105a:	89a3      	ldrh	r3, [r4, #12]
 800105c:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8001060:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8001064:	d003      	beq.n	800106e <__swsetup_r+0x9a>
 8001066:	4621      	mov	r1, r4
 8001068:	4630      	mov	r0, r6
 800106a:	f000 f927 	bl	80012bc <__smakebuf_r>
 800106e:	89a0      	ldrh	r0, [r4, #12]
 8001070:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8001074:	f010 0301 	ands.w	r3, r0, #1
 8001078:	d00a      	beq.n	8001090 <__swsetup_r+0xbc>
 800107a:	2300      	movs	r3, #0
 800107c:	60a3      	str	r3, [r4, #8]
 800107e:	6963      	ldr	r3, [r4, #20]
 8001080:	425b      	negs	r3, r3
 8001082:	61a3      	str	r3, [r4, #24]
 8001084:	6923      	ldr	r3, [r4, #16]
 8001086:	b943      	cbnz	r3, 800109a <__swsetup_r+0xc6>
 8001088:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 800108c:	d1ba      	bne.n	8001004 <__swsetup_r+0x30>
 800108e:	bd70      	pop	{r4, r5, r6, pc}
 8001090:	0781      	lsls	r1, r0, #30
 8001092:	bf58      	it	pl
 8001094:	6963      	ldrpl	r3, [r4, #20]
 8001096:	60a3      	str	r3, [r4, #8]
 8001098:	e7f4      	b.n	8001084 <__swsetup_r+0xb0>
 800109a:	2000      	movs	r0, #0
 800109c:	e7f7      	b.n	800108e <__swsetup_r+0xba>
 800109e:	bf00      	nop
 80010a0:	20000000 	.word	0x20000000
 80010a4:	08001550 	.word	0x08001550
 80010a8:	08001570 	.word	0x08001570
 80010ac:	08001530 	.word	0x08001530

080010b0 <_close_r>:
 80010b0:	b538      	push	{r3, r4, r5, lr}
 80010b2:	4d06      	ldr	r5, [pc, #24]	; (80010cc <_close_r+0x1c>)
 80010b4:	2300      	movs	r3, #0
 80010b6:	4604      	mov	r4, r0
 80010b8:	4608      	mov	r0, r1
 80010ba:	602b      	str	r3, [r5, #0]
 80010bc:	f7ff f97f 	bl	80003be <_close>
 80010c0:	1c43      	adds	r3, r0, #1
 80010c2:	d102      	bne.n	80010ca <_close_r+0x1a>
 80010c4:	682b      	ldr	r3, [r5, #0]
 80010c6:	b103      	cbz	r3, 80010ca <_close_r+0x1a>
 80010c8:	6023      	str	r3, [r4, #0]
 80010ca:	bd38      	pop	{r3, r4, r5, pc}
 80010cc:	20000090 	.word	0x20000090

080010d0 <__sflush_r>:
 80010d0:	898a      	ldrh	r2, [r1, #12]
 80010d2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80010d4:	4605      	mov	r5, r0
 80010d6:	0710      	lsls	r0, r2, #28
 80010d8:	460c      	mov	r4, r1
 80010da:	d457      	bmi.n	800118c <__sflush_r+0xbc>
 80010dc:	684b      	ldr	r3, [r1, #4]
 80010de:	2b00      	cmp	r3, #0
 80010e0:	dc04      	bgt.n	80010ec <__sflush_r+0x1c>
 80010e2:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 80010e4:	2b00      	cmp	r3, #0
 80010e6:	dc01      	bgt.n	80010ec <__sflush_r+0x1c>
 80010e8:	2000      	movs	r0, #0
 80010ea:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80010ec:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80010ee:	2e00      	cmp	r6, #0
 80010f0:	d0fa      	beq.n	80010e8 <__sflush_r+0x18>
 80010f2:	2300      	movs	r3, #0
 80010f4:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 80010f8:	682f      	ldr	r7, [r5, #0]
 80010fa:	602b      	str	r3, [r5, #0]
 80010fc:	d032      	beq.n	8001164 <__sflush_r+0x94>
 80010fe:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8001100:	89a3      	ldrh	r3, [r4, #12]
 8001102:	075a      	lsls	r2, r3, #29
 8001104:	d505      	bpl.n	8001112 <__sflush_r+0x42>
 8001106:	6863      	ldr	r3, [r4, #4]
 8001108:	1ac0      	subs	r0, r0, r3
 800110a:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800110c:	b10b      	cbz	r3, 8001112 <__sflush_r+0x42>
 800110e:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001110:	1ac0      	subs	r0, r0, r3
 8001112:	2300      	movs	r3, #0
 8001114:	4602      	mov	r2, r0
 8001116:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8001118:	6a21      	ldr	r1, [r4, #32]
 800111a:	4628      	mov	r0, r5
 800111c:	47b0      	blx	r6
 800111e:	1c43      	adds	r3, r0, #1
 8001120:	89a3      	ldrh	r3, [r4, #12]
 8001122:	d106      	bne.n	8001132 <__sflush_r+0x62>
 8001124:	6829      	ldr	r1, [r5, #0]
 8001126:	291d      	cmp	r1, #29
 8001128:	d82c      	bhi.n	8001184 <__sflush_r+0xb4>
 800112a:	4a29      	ldr	r2, [pc, #164]	; (80011d0 <__sflush_r+0x100>)
 800112c:	40ca      	lsrs	r2, r1
 800112e:	07d6      	lsls	r6, r2, #31
 8001130:	d528      	bpl.n	8001184 <__sflush_r+0xb4>
 8001132:	2200      	movs	r2, #0
 8001134:	6062      	str	r2, [r4, #4]
 8001136:	04d9      	lsls	r1, r3, #19
 8001138:	6922      	ldr	r2, [r4, #16]
 800113a:	6022      	str	r2, [r4, #0]
 800113c:	d504      	bpl.n	8001148 <__sflush_r+0x78>
 800113e:	1c42      	adds	r2, r0, #1
 8001140:	d101      	bne.n	8001146 <__sflush_r+0x76>
 8001142:	682b      	ldr	r3, [r5, #0]
 8001144:	b903      	cbnz	r3, 8001148 <__sflush_r+0x78>
 8001146:	6560      	str	r0, [r4, #84]	; 0x54
 8001148:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800114a:	602f      	str	r7, [r5, #0]
 800114c:	2900      	cmp	r1, #0
 800114e:	d0cb      	beq.n	80010e8 <__sflush_r+0x18>
 8001150:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8001154:	4299      	cmp	r1, r3
 8001156:	d002      	beq.n	800115e <__sflush_r+0x8e>
 8001158:	4628      	mov	r0, r5
 800115a:	f000 f8fb 	bl	8001354 <_free_r>
 800115e:	2000      	movs	r0, #0
 8001160:	6360      	str	r0, [r4, #52]	; 0x34
 8001162:	e7c2      	b.n	80010ea <__sflush_r+0x1a>
 8001164:	6a21      	ldr	r1, [r4, #32]
 8001166:	2301      	movs	r3, #1
 8001168:	4628      	mov	r0, r5
 800116a:	47b0      	blx	r6
 800116c:	1c41      	adds	r1, r0, #1
 800116e:	d1c7      	bne.n	8001100 <__sflush_r+0x30>
 8001170:	682b      	ldr	r3, [r5, #0]
 8001172:	2b00      	cmp	r3, #0
 8001174:	d0c4      	beq.n	8001100 <__sflush_r+0x30>
 8001176:	2b1d      	cmp	r3, #29
 8001178:	d001      	beq.n	800117e <__sflush_r+0xae>
 800117a:	2b16      	cmp	r3, #22
 800117c:	d101      	bne.n	8001182 <__sflush_r+0xb2>
 800117e:	602f      	str	r7, [r5, #0]
 8001180:	e7b2      	b.n	80010e8 <__sflush_r+0x18>
 8001182:	89a3      	ldrh	r3, [r4, #12]
 8001184:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001188:	81a3      	strh	r3, [r4, #12]
 800118a:	e7ae      	b.n	80010ea <__sflush_r+0x1a>
 800118c:	690f      	ldr	r7, [r1, #16]
 800118e:	2f00      	cmp	r7, #0
 8001190:	d0aa      	beq.n	80010e8 <__sflush_r+0x18>
 8001192:	0793      	lsls	r3, r2, #30
 8001194:	680e      	ldr	r6, [r1, #0]
 8001196:	bf08      	it	eq
 8001198:	694b      	ldreq	r3, [r1, #20]
 800119a:	600f      	str	r7, [r1, #0]
 800119c:	bf18      	it	ne
 800119e:	2300      	movne	r3, #0
 80011a0:	1bf6      	subs	r6, r6, r7
 80011a2:	608b      	str	r3, [r1, #8]
 80011a4:	2e00      	cmp	r6, #0
 80011a6:	dd9f      	ble.n	80010e8 <__sflush_r+0x18>
 80011a8:	6a21      	ldr	r1, [r4, #32]
 80011aa:	f8d4 c028 	ldr.w	ip, [r4, #40]	; 0x28
 80011ae:	4633      	mov	r3, r6
 80011b0:	463a      	mov	r2, r7
 80011b2:	4628      	mov	r0, r5
 80011b4:	47e0      	blx	ip
 80011b6:	2800      	cmp	r0, #0
 80011b8:	dc06      	bgt.n	80011c8 <__sflush_r+0xf8>
 80011ba:	89a3      	ldrh	r3, [r4, #12]
 80011bc:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80011c0:	81a3      	strh	r3, [r4, #12]
 80011c2:	f04f 30ff 	mov.w	r0, #4294967295
 80011c6:	e790      	b.n	80010ea <__sflush_r+0x1a>
 80011c8:	4407      	add	r7, r0
 80011ca:	1a36      	subs	r6, r6, r0
 80011cc:	e7ea      	b.n	80011a4 <__sflush_r+0xd4>
 80011ce:	bf00      	nop
 80011d0:	20400001 	.word	0x20400001

080011d4 <_fflush_r>:
 80011d4:	b538      	push	{r3, r4, r5, lr}
 80011d6:	690b      	ldr	r3, [r1, #16]
 80011d8:	4605      	mov	r5, r0
 80011da:	460c      	mov	r4, r1
 80011dc:	b913      	cbnz	r3, 80011e4 <_fflush_r+0x10>
 80011de:	2500      	movs	r5, #0
 80011e0:	4628      	mov	r0, r5
 80011e2:	bd38      	pop	{r3, r4, r5, pc}
 80011e4:	b118      	cbz	r0, 80011ee <_fflush_r+0x1a>
 80011e6:	6983      	ldr	r3, [r0, #24]
 80011e8:	b90b      	cbnz	r3, 80011ee <_fflush_r+0x1a>
 80011ea:	f7ff fa1b 	bl	8000624 <__sinit>
 80011ee:	4b14      	ldr	r3, [pc, #80]	; (8001240 <_fflush_r+0x6c>)
 80011f0:	429c      	cmp	r4, r3
 80011f2:	d11b      	bne.n	800122c <_fflush_r+0x58>
 80011f4:	686c      	ldr	r4, [r5, #4]
 80011f6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80011fa:	2b00      	cmp	r3, #0
 80011fc:	d0ef      	beq.n	80011de <_fflush_r+0xa>
 80011fe:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8001200:	07d0      	lsls	r0, r2, #31
 8001202:	d404      	bmi.n	800120e <_fflush_r+0x3a>
 8001204:	0599      	lsls	r1, r3, #22
 8001206:	d402      	bmi.n	800120e <_fflush_r+0x3a>
 8001208:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800120a:	f7ff faa9 	bl	8000760 <__retarget_lock_acquire_recursive>
 800120e:	4628      	mov	r0, r5
 8001210:	4621      	mov	r1, r4
 8001212:	f7ff ff5d 	bl	80010d0 <__sflush_r>
 8001216:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001218:	07da      	lsls	r2, r3, #31
 800121a:	4605      	mov	r5, r0
 800121c:	d4e0      	bmi.n	80011e0 <_fflush_r+0xc>
 800121e:	89a3      	ldrh	r3, [r4, #12]
 8001220:	059b      	lsls	r3, r3, #22
 8001222:	d4dd      	bmi.n	80011e0 <_fflush_r+0xc>
 8001224:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001226:	f7ff fa9c 	bl	8000762 <__retarget_lock_release_recursive>
 800122a:	e7d9      	b.n	80011e0 <_fflush_r+0xc>
 800122c:	4b05      	ldr	r3, [pc, #20]	; (8001244 <_fflush_r+0x70>)
 800122e:	429c      	cmp	r4, r3
 8001230:	d101      	bne.n	8001236 <_fflush_r+0x62>
 8001232:	68ac      	ldr	r4, [r5, #8]
 8001234:	e7df      	b.n	80011f6 <_fflush_r+0x22>
 8001236:	4b04      	ldr	r3, [pc, #16]	; (8001248 <_fflush_r+0x74>)
 8001238:	429c      	cmp	r4, r3
 800123a:	bf08      	it	eq
 800123c:	68ec      	ldreq	r4, [r5, #12]
 800123e:	e7da      	b.n	80011f6 <_fflush_r+0x22>
 8001240:	08001550 	.word	0x08001550
 8001244:	08001570 	.word	0x08001570
 8001248:	08001530 	.word	0x08001530

0800124c <_lseek_r>:
 800124c:	b538      	push	{r3, r4, r5, lr}
 800124e:	4d07      	ldr	r5, [pc, #28]	; (800126c <_lseek_r+0x20>)
 8001250:	4604      	mov	r4, r0
 8001252:	4608      	mov	r0, r1
 8001254:	4611      	mov	r1, r2
 8001256:	2200      	movs	r2, #0
 8001258:	602a      	str	r2, [r5, #0]
 800125a:	461a      	mov	r2, r3
 800125c:	f7ff f8d3 	bl	8000406 <_lseek>
 8001260:	1c43      	adds	r3, r0, #1
 8001262:	d102      	bne.n	800126a <_lseek_r+0x1e>
 8001264:	682b      	ldr	r3, [r5, #0]
 8001266:	b103      	cbz	r3, 800126a <_lseek_r+0x1e>
 8001268:	6023      	str	r3, [r4, #0]
 800126a:	bd38      	pop	{r3, r4, r5, pc}
 800126c:	20000090 	.word	0x20000090

08001270 <__swhatbuf_r>:
 8001270:	b570      	push	{r4, r5, r6, lr}
 8001272:	460e      	mov	r6, r1
 8001274:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001278:	2900      	cmp	r1, #0
 800127a:	b096      	sub	sp, #88	; 0x58
 800127c:	4614      	mov	r4, r2
 800127e:	461d      	mov	r5, r3
 8001280:	da08      	bge.n	8001294 <__swhatbuf_r+0x24>
 8001282:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 8001286:	2200      	movs	r2, #0
 8001288:	602a      	str	r2, [r5, #0]
 800128a:	061a      	lsls	r2, r3, #24
 800128c:	d410      	bmi.n	80012b0 <__swhatbuf_r+0x40>
 800128e:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8001292:	e00e      	b.n	80012b2 <__swhatbuf_r+0x42>
 8001294:	466a      	mov	r2, sp
 8001296:	f000 f8b9 	bl	800140c <_fstat_r>
 800129a:	2800      	cmp	r0, #0
 800129c:	dbf1      	blt.n	8001282 <__swhatbuf_r+0x12>
 800129e:	9a01      	ldr	r2, [sp, #4]
 80012a0:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 80012a4:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 80012a8:	425a      	negs	r2, r3
 80012aa:	415a      	adcs	r2, r3
 80012ac:	602a      	str	r2, [r5, #0]
 80012ae:	e7ee      	b.n	800128e <__swhatbuf_r+0x1e>
 80012b0:	2340      	movs	r3, #64	; 0x40
 80012b2:	2000      	movs	r0, #0
 80012b4:	6023      	str	r3, [r4, #0]
 80012b6:	b016      	add	sp, #88	; 0x58
 80012b8:	bd70      	pop	{r4, r5, r6, pc}
	...

080012bc <__smakebuf_r>:
 80012bc:	898b      	ldrh	r3, [r1, #12]
 80012be:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80012c0:	079d      	lsls	r5, r3, #30
 80012c2:	4606      	mov	r6, r0
 80012c4:	460c      	mov	r4, r1
 80012c6:	d507      	bpl.n	80012d8 <__smakebuf_r+0x1c>
 80012c8:	f104 0347 	add.w	r3, r4, #71	; 0x47
 80012cc:	6023      	str	r3, [r4, #0]
 80012ce:	6123      	str	r3, [r4, #16]
 80012d0:	2301      	movs	r3, #1
 80012d2:	6163      	str	r3, [r4, #20]
 80012d4:	b002      	add	sp, #8
 80012d6:	bd70      	pop	{r4, r5, r6, pc}
 80012d8:	ab01      	add	r3, sp, #4
 80012da:	466a      	mov	r2, sp
 80012dc:	f7ff ffc8 	bl	8001270 <__swhatbuf_r>
 80012e0:	9900      	ldr	r1, [sp, #0]
 80012e2:	4605      	mov	r5, r0
 80012e4:	4630      	mov	r0, r6
 80012e6:	f7ff fa5d 	bl	80007a4 <_malloc_r>
 80012ea:	b948      	cbnz	r0, 8001300 <__smakebuf_r+0x44>
 80012ec:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80012f0:	059a      	lsls	r2, r3, #22
 80012f2:	d4ef      	bmi.n	80012d4 <__smakebuf_r+0x18>
 80012f4:	f023 0303 	bic.w	r3, r3, #3
 80012f8:	f043 0302 	orr.w	r3, r3, #2
 80012fc:	81a3      	strh	r3, [r4, #12]
 80012fe:	e7e3      	b.n	80012c8 <__smakebuf_r+0xc>
 8001300:	4b0d      	ldr	r3, [pc, #52]	; (8001338 <__smakebuf_r+0x7c>)
 8001302:	62b3      	str	r3, [r6, #40]	; 0x28
 8001304:	89a3      	ldrh	r3, [r4, #12]
 8001306:	6020      	str	r0, [r4, #0]
 8001308:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800130c:	81a3      	strh	r3, [r4, #12]
 800130e:	9b00      	ldr	r3, [sp, #0]
 8001310:	6163      	str	r3, [r4, #20]
 8001312:	9b01      	ldr	r3, [sp, #4]
 8001314:	6120      	str	r0, [r4, #16]
 8001316:	b15b      	cbz	r3, 8001330 <__smakebuf_r+0x74>
 8001318:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800131c:	4630      	mov	r0, r6
 800131e:	f000 f887 	bl	8001430 <_isatty_r>
 8001322:	b128      	cbz	r0, 8001330 <__smakebuf_r+0x74>
 8001324:	89a3      	ldrh	r3, [r4, #12]
 8001326:	f023 0303 	bic.w	r3, r3, #3
 800132a:	f043 0301 	orr.w	r3, r3, #1
 800132e:	81a3      	strh	r3, [r4, #12]
 8001330:	89a0      	ldrh	r0, [r4, #12]
 8001332:	4305      	orrs	r5, r0
 8001334:	81a5      	strh	r5, [r4, #12]
 8001336:	e7cd      	b.n	80012d4 <__smakebuf_r+0x18>
 8001338:	080005bd 	.word	0x080005bd

0800133c <__malloc_lock>:
 800133c:	4801      	ldr	r0, [pc, #4]	; (8001344 <__malloc_lock+0x8>)
 800133e:	f7ff ba0f 	b.w	8000760 <__retarget_lock_acquire_recursive>
 8001342:	bf00      	nop
 8001344:	20000084 	.word	0x20000084

08001348 <__malloc_unlock>:
 8001348:	4801      	ldr	r0, [pc, #4]	; (8001350 <__malloc_unlock+0x8>)
 800134a:	f7ff ba0a 	b.w	8000762 <__retarget_lock_release_recursive>
 800134e:	bf00      	nop
 8001350:	20000084 	.word	0x20000084

08001354 <_free_r>:
 8001354:	b538      	push	{r3, r4, r5, lr}
 8001356:	4605      	mov	r5, r0
 8001358:	2900      	cmp	r1, #0
 800135a:	d041      	beq.n	80013e0 <_free_r+0x8c>
 800135c:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8001360:	1f0c      	subs	r4, r1, #4
 8001362:	2b00      	cmp	r3, #0
 8001364:	bfb8      	it	lt
 8001366:	18e4      	addlt	r4, r4, r3
 8001368:	f7ff ffe8 	bl	800133c <__malloc_lock>
 800136c:	4a1d      	ldr	r2, [pc, #116]	; (80013e4 <_free_r+0x90>)
 800136e:	6813      	ldr	r3, [r2, #0]
 8001370:	b933      	cbnz	r3, 8001380 <_free_r+0x2c>
 8001372:	6063      	str	r3, [r4, #4]
 8001374:	6014      	str	r4, [r2, #0]
 8001376:	4628      	mov	r0, r5
 8001378:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800137c:	f7ff bfe4 	b.w	8001348 <__malloc_unlock>
 8001380:	42a3      	cmp	r3, r4
 8001382:	d908      	bls.n	8001396 <_free_r+0x42>
 8001384:	6820      	ldr	r0, [r4, #0]
 8001386:	1821      	adds	r1, r4, r0
 8001388:	428b      	cmp	r3, r1
 800138a:	bf01      	itttt	eq
 800138c:	6819      	ldreq	r1, [r3, #0]
 800138e:	685b      	ldreq	r3, [r3, #4]
 8001390:	1809      	addeq	r1, r1, r0
 8001392:	6021      	streq	r1, [r4, #0]
 8001394:	e7ed      	b.n	8001372 <_free_r+0x1e>
 8001396:	461a      	mov	r2, r3
 8001398:	685b      	ldr	r3, [r3, #4]
 800139a:	b10b      	cbz	r3, 80013a0 <_free_r+0x4c>
 800139c:	42a3      	cmp	r3, r4
 800139e:	d9fa      	bls.n	8001396 <_free_r+0x42>
 80013a0:	6811      	ldr	r1, [r2, #0]
 80013a2:	1850      	adds	r0, r2, r1
 80013a4:	42a0      	cmp	r0, r4
 80013a6:	d10b      	bne.n	80013c0 <_free_r+0x6c>
 80013a8:	6820      	ldr	r0, [r4, #0]
 80013aa:	4401      	add	r1, r0
 80013ac:	1850      	adds	r0, r2, r1
 80013ae:	4283      	cmp	r3, r0
 80013b0:	6011      	str	r1, [r2, #0]
 80013b2:	d1e0      	bne.n	8001376 <_free_r+0x22>
 80013b4:	6818      	ldr	r0, [r3, #0]
 80013b6:	685b      	ldr	r3, [r3, #4]
 80013b8:	6053      	str	r3, [r2, #4]
 80013ba:	4401      	add	r1, r0
 80013bc:	6011      	str	r1, [r2, #0]
 80013be:	e7da      	b.n	8001376 <_free_r+0x22>
 80013c0:	d902      	bls.n	80013c8 <_free_r+0x74>
 80013c2:	230c      	movs	r3, #12
 80013c4:	602b      	str	r3, [r5, #0]
 80013c6:	e7d6      	b.n	8001376 <_free_r+0x22>
 80013c8:	6820      	ldr	r0, [r4, #0]
 80013ca:	1821      	adds	r1, r4, r0
 80013cc:	428b      	cmp	r3, r1
 80013ce:	bf04      	itt	eq
 80013d0:	6819      	ldreq	r1, [r3, #0]
 80013d2:	685b      	ldreq	r3, [r3, #4]
 80013d4:	6063      	str	r3, [r4, #4]
 80013d6:	bf04      	itt	eq
 80013d8:	1809      	addeq	r1, r1, r0
 80013da:	6021      	streq	r1, [r4, #0]
 80013dc:	6054      	str	r4, [r2, #4]
 80013de:	e7ca      	b.n	8001376 <_free_r+0x22>
 80013e0:	bd38      	pop	{r3, r4, r5, pc}
 80013e2:	bf00      	nop
 80013e4:	20000088 	.word	0x20000088

080013e8 <_read_r>:
 80013e8:	b538      	push	{r3, r4, r5, lr}
 80013ea:	4d07      	ldr	r5, [pc, #28]	; (8001408 <_read_r+0x20>)
 80013ec:	4604      	mov	r4, r0
 80013ee:	4608      	mov	r0, r1
 80013f0:	4611      	mov	r1, r2
 80013f2:	2200      	movs	r2, #0
 80013f4:	602a      	str	r2, [r5, #0]
 80013f6:	461a      	mov	r2, r3
 80013f8:	f7fe ffa8 	bl	800034c <_read>
 80013fc:	1c43      	adds	r3, r0, #1
 80013fe:	d102      	bne.n	8001406 <_read_r+0x1e>
 8001400:	682b      	ldr	r3, [r5, #0]
 8001402:	b103      	cbz	r3, 8001406 <_read_r+0x1e>
 8001404:	6023      	str	r3, [r4, #0]
 8001406:	bd38      	pop	{r3, r4, r5, pc}
 8001408:	20000090 	.word	0x20000090

0800140c <_fstat_r>:
 800140c:	b538      	push	{r3, r4, r5, lr}
 800140e:	4d07      	ldr	r5, [pc, #28]	; (800142c <_fstat_r+0x20>)
 8001410:	2300      	movs	r3, #0
 8001412:	4604      	mov	r4, r0
 8001414:	4608      	mov	r0, r1
 8001416:	4611      	mov	r1, r2
 8001418:	602b      	str	r3, [r5, #0]
 800141a:	f7fe ffdb 	bl	80003d4 <_fstat>
 800141e:	1c43      	adds	r3, r0, #1
 8001420:	d102      	bne.n	8001428 <_fstat_r+0x1c>
 8001422:	682b      	ldr	r3, [r5, #0]
 8001424:	b103      	cbz	r3, 8001428 <_fstat_r+0x1c>
 8001426:	6023      	str	r3, [r4, #0]
 8001428:	bd38      	pop	{r3, r4, r5, pc}
 800142a:	bf00      	nop
 800142c:	20000090 	.word	0x20000090

08001430 <_isatty_r>:
 8001430:	b538      	push	{r3, r4, r5, lr}
 8001432:	4d06      	ldr	r5, [pc, #24]	; (800144c <_isatty_r+0x1c>)
 8001434:	2300      	movs	r3, #0
 8001436:	4604      	mov	r4, r0
 8001438:	4608      	mov	r0, r1
 800143a:	602b      	str	r3, [r5, #0]
 800143c:	f7fe ffd9 	bl	80003f2 <_isatty>
 8001440:	1c43      	adds	r3, r0, #1
 8001442:	d102      	bne.n	800144a <_isatty_r+0x1a>
 8001444:	682b      	ldr	r3, [r5, #0]
 8001446:	b103      	cbz	r3, 800144a <_isatty_r+0x1a>
 8001448:	6023      	str	r3, [r4, #0]
 800144a:	bd38      	pop	{r3, r4, r5, pc}
 800144c:	20000090 	.word	0x20000090

08001450 <_init>:
 8001450:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001452:	bf00      	nop
 8001454:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001456:	bc08      	pop	{r3}
 8001458:	469e      	mov	lr, r3
 800145a:	4770      	bx	lr

0800145c <_fini>:
 800145c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800145e:	bf00      	nop
 8001460:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001462:	bc08      	pop	{r3}
 8001464:	469e      	mov	lr, r3
 8001466:	4770      	bx	lr
